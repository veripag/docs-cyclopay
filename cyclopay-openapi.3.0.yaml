openapi: 3.0.0
info:
  x-logo:
      url: "https://veripagassets.blob.core.windows.net/img/logotipo-veripag-cyclopay%402x.png"
      backgroundColor: "#F6F6F6"
      altText: "Cyclopay logo"
    
  title: api.cyclopay
  description: |-

    # Introduction to Cyclopay

    Welcome to Cyclopay's API! 
    
    you can utilize our API to realize the management of your recurrent payments with  agility and easyness.

    The resources of Cyclopay's platform are available from utilizing the default API REST. Our aswers will aways be in JSON and utilizing the standard of the codes HTTP 

    Along this documentation, we will detail every functionality suported by our API. if you have any doubt, sugestion or want to report any error,  contact us through  ***integracoes@veripag.com.br***.
    
    # starting

    To start your integration with us, you are gonna need a key **API Key** ( We are gonna call **"api_key"**), that are obtained by the integration or by Cyclopay's backoffice, acessing the menu enterprise -> configurations -> acess. 
    
    With the api_key in hands, you can utilize everything that Cyclopay's API can offer to you.

    > The Api Key is a secret key, unique and untransferable. Cyclopay does not responsabilize for the utilization and administration mean of the provided keys, but in case of loss of your keys, you can recriate it using the redefine key functionality 

    ## Authentication

    The API acess authentication is performed through [Headers](https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Headers), needing 
    the header "api_key" for every request.

    Below is an example of requesting the Cyclopay's API. 

    ``` curlrc
          curl --location --request GET 'https://api-billing.veripag.com.br/v1/customers' \
          --header 'api_key: ak_sandbox_bfffff8fc80096c0b8e6c95d7d670e080bf3ffff' \
    ```

    ## HTTP Answers
 
    Our API is builded with de REST standard, using better methods and HTTP verbs for the answers identification. Every section have the definition of its errors and possible answers, but the waited codes are: 

    - **HTTP 2xx** - Sucess answers. Occurs when the request was correctly realized by API.

    - **HTTP 4xx** - Identificated and mapped answers, can be solved by the API return message.
    
    - **HTTP 5xx** - Unknown Error (On this case, its necessary an support call for the identification of the problem).

    ## Errors

    As recently spoken, our API have a default object for the retorned errors **4xx**. 

    The objects are separated by two categories

    -  errors listing objects: Occurs on body validation
    
    ``` javascript
        {
          "errors": [
          {
            "error_code": 400,
            "parameter_name": "error message",
            "message": "parameter.code"
          }]
        }    
    ``` 

    - object Error:  Occurs on body validation and for indisponible actions

    ``` javascript
        {
            "error_code": 409,
            "parameter_name": "error message",
            "message": "parameter.code"
        }
    ```
    
      |  parameter | description | type  | 
      |---|---|---|
      | error_code  | _Http Code_ error | `int`  |  
      | parameter_name  | Error code  | `string`  |  
      | message | error message, sumary of the happenings  | `string`  |  

    ## Researches and resume

    Continuing with our explication of Cyclopay's API. The functionalities that return a data list, that occur in the metods HTTP GET, has features of search filter, pagination and ordering of the required result.

    ### Filters

    The search filters are optional and must be sent to the URL via [QueryString](https://en.wikipedia.org/wiki/Query_string). Containing specific sending formats according with the data type. For numeric and text data types, it doesn't exist alterations on the sending format. For boolean types, the sendt datas must be:

    - **true**: true
    - **false**: False

    Date types must be formatted according to the example below for the search to be carried out correctly.

    ```
      YYYY-MM-DD
      http://example.cyclopay.com/v1/example?createDateStart=2018-06-15

      MM-DD-YYYY
      http://example.cyclopay.com/v1/example?createDateStart=06-15-2018

      YYYY/MM/DD
      http://example.cyclopay.com/v1/example?createDateStart=2018/06/15

      MM/DD/YYYY
      http://example.cyclopay.com/v1/example?createDateStart=06/15/2018
    ```

    ### Pagination

      Pagination is performed by sending the parameters __ * count * __ and __ * page * __. After performing a paged search the request will be answered with an object, the format of this object is:

    ``` javascript
    {
        "total_items": 0,
        "total_pages": 0,
        "quantity_page": 10,
        "actual_page": 1,
        "items": []
    }
    ```

      |  parameter | type | description  | 
      |---|---|---|
      | total_items  | `int` | Total items returned in the * items * element, resulting from the search.  |  
      | total_pages  | `int` | total pages returned on the research according with the quantity of consulted items. |  
      | quantity_page | `int` | Number of items per page, defined by the parameter * count *.|
      | current_page  | `int`| Actual page searched, defined by the parameter *page*  |  
      | items  | `T` | Search list, where T is the request context object. |  
         
    
      > When page parameter (research pagination) is not sent, the API  will always consider the default, returning page number 1.
    
      > When the count parameter (number of items on the page) is not sent, the API will always assign the default quantity of 10 items per page.

    ### Ordenation 
   
    The order of results, when possible, can be carried out in an increasing or decreasing manner by the date of creation of the record. By default, the order of results is always in descending order.
    But by sending the "* orderDir *" parameter via * QueryString *, you can change the ordering.
    The possible values ​​of the "* orderDir *" parameter are: "* asc *" or "* desc *".
    - __asc__: Ascending order.
    - __desc__: Descending order.    
    ```
      http://example.veripag.com/v1/example?orderDir=asc
    ```

  contact: {}
  version: '1.7.2'
servers:
  - url: 'http://example.com/v1'
    variables: {}
  - url: 'https://cyclo-payment-develop.azurewebsites.net/api'
    variables: {}
paths:
  # ROUTES AFFILIATION
  /affiliations/types:
    get:
      tags:
        - Affiliations
      summary: Get Affiliations Type
      operationId: GetAffiliationsType
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /affiliations/types/1:
    get:
      tags:
        - Affiliations
      summary: Get Affiliations Type By Id
      operationId: GetAffiliationsTypeById
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /affiliations:
    post:
      tags:
        - Affiliations
      summary: Create Affiliation
      operationId: CreateAffiliation
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAffiliationRequest'
            example:
              type: boleto
              data:
                agency: '2546'
                agency_digit: '1'
                account: '12345'
                account_digit: '7'
                agreement_code: '1234561234'
                bank: '341'
                carteira: '109'
                conv_api_key: test key
                conv_api_id: test key
                conv_api_secret: test key
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    get:
      tags:
        - Affiliations
      summary: Get Affiliations
      operationId: GetAffiliations
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES SHOP
  /shops/c675048c-fea7-41cc-97da-e71c1eadb69e/affiliations:
    get:
      tags:
        - Affiliation
      summary: Include Affiliation
      operationId: IncludeAffiliation
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    post:
      tags:
        - Affiliation
      summary: Include Affiliation Copy
      operationId: IncludeAffiliationCopy
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncludeAffiliationCopyRequest'
            example:
              affiliation_id: 4e0f5c7f-bb80-ea11-86e9-0003ff3451c6
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shops:
    get:
      tags:
        - Shop
      summary: Get Shop List
      description: shopping list
      operationId: GetShopList
      parameters:
        - name: companyId
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 6d44943e-d00e-4e2e-b4c9-ed7713a657c6
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    post:
      tags:
        - Shop
      summary: Create Shop
      operationId: CreateShop
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShopRequest'
            example:
              name: loja_cpf
              legal_name: loja_cpf
              soft_descriptor: loja_cpf
              email: lojacpf@lojacpf.com
              document:
                type: DNI
                number: 34690678P
              address:
                address_country_code: BRA
                postal_code: 05128000
                street1: Rua Willis Roberto Banks
                number: '549'
                complement: ''
                district: Parque Maria Domitila
                city: São Paulo
                state: SP
                aditional_info: ''
              ref_code: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shop/a77a8cf4-1a42-4c5c-afce-1a6679801652:
    get:
      tags:
        - Shop
      summary: Get Shop Detail
      operationId: GetShopDetail
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shop/c1296659-34ca-4fc3-aea5-fe4d0bdbc7be:
    put:
      tags:
        - Shop
      summary: Update Shop
      operationId: UpdateShop
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: e30.eyJjb21wYW55X2lkIjoiMzYiLCJjb21wYW55X2NvZGUiOiJhM2UwZTU3Yi1jNWZkLTQ3Y2EtODk5Mi01M2JlZTUzMDY3MGQiLCJwcm92aWRlcl9pZCI6IjMyIiwidXNlcl9pZCI6IjIzIiwic2lnbmF0dXJlIjoiZm1LSjdKbllJMyIsIm5iZiI6MTU1NjY0MDUxMCwiZXhwIjoxNTU2NjQxMTEwLCJpYXQiOjE1NTY2NDA1MTB9.
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShopRequest'
            example:
              shop_id: c1296659-34ca-4fc3-aea5-fe4d0bdbc7be
              ref_code: 0524409
              is_main: false
              name: LOJA_XPTO
              legal_name: LOJA_XPTO
              description: ''
              document:
                type: CNPJ
                number: '19100000000000'
              email: loja@xpto.com
              soft_descriptor: SOFT_DESC
              create_date: '2019-04-26T18:20:59Z'
              update_date: '2019-04-30T13:52:03Z'
              active: true
              address:
                address_code: ''
                street1: Rua Willis Roberto Banks
                street2: ''
                number: '549'
                district: Parque Maria Domitila
                city: São Paulo
                state: SP
                address_country_code: BR
                postal_code: 05128000
                additional_info: ''
                complement: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shops/8faf9d8f-2e3e-4b3e-8774-4b2525ac92da/active:
    put:
      tags:
        - Shop
      summary: Active Shop
      operationId: ActiveShop
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shop/{code}/inactive:
    put:
      tags:
        - Shop
      summary: Inactive Shop
      operationId: InactiveShop
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: code
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InactiveShopRequest'
            example:
              code: LOJA1
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shop/29e0f725-2b55-4e77-92d2-659d206b3a42/main:
    put:
      tags:
        - Shop
      summary: Set Main Shop
      operationId: SetMainShop
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES GATEWAY PROFILE
  /shops/8467f7b5-4806-427e-9f19-a328739da36d/gateway_profile:
    put:
      tags:
        - Shop
      summary: Set Gateway Profile on Shop
      operationId: SetGatewayProfileonShop
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGatewayProfileonShopRequest'
            example:
              gateway_profile_ids:
                - 18
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /shop/31691489-b0d5-460c-851b-9f0e1659ba5d/gateway_profile:
    get:
      tags:
        - Shop
      summary: Get Gateway Profile of Shop
      operationId: GetGatewayProfileofShop
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_live_edc14416aa77554e3ed3d9e2a81492aea824b
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    
  # ROUTES PLANS
  
  /plans:
    post:
      tags:
        - Plans
      summary: Creating a Plan
      operationId: CreatePlan
      parameters:
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      responses:
        '200':
          description: 'plan successfully created'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansResponse'
        '400':
          description: 'Validation error'
          headers: {}
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/ListErrorResponse'
      deprecated: false
      security: []
    get:
      tags:
        - Plans
      summary: consulting plans
      operationId: GetPlans
      parameters:
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'sucessfully consulation'
          headers: {}
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ListingPlans'
      deprecated: false
      security: []
  /plans/{planId}:
    get:
      tags:
        - Plans
      summary: Consulting a plan
      operationId: GetSpecificPlan
      parameters:
        - name: api_key
          in: header
          description: 'API key'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: planId
          in: path
          description: 'Plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
      responses:
        '200':
          description: 'sucessfully consulation'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansResponse'
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    put:
      tags:
        - Plans
      summary: changing a plan.
      operationId: UpdatePlan
      parameters:
        - name: api_key
          in: header
          description: 'API key'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: planId
          in: path
          description: ' plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      responses:
        '200':
          description: 'Operation performed successfully'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansResponse'
        '400':
          description: 'Error in data validation'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListErrorResponse'
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
  /plans/{planId}/active:
    put:
      tags:
        - Plans
      summary: Activating a plan
      operationId: ActivePlan
      parameters:
        - name: api_key
          in: header
          description: 'API key'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: planId
          in: path
          description: 'plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
      responses:
        '200':
          description: 'Operation performed successfully'
          headers: {}
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
  /plans/{planId}/inactive:
    put:
      tags:
        - Plans
      summary: Inactivating a plan
      operationId: InactivePlan
      parameters:
        - name: api_key
          in: header
          description: ' API key '
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: planId
          in: path
          description: 'plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
      responses:
        '200':
          description: 'operation performed successfully'
          headers: {}
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
  
# ROUTES PLANS PRICING OPTIONS
  
  /plans/{planId}/pricing-options:
    post:
      tags:
        - Prices
      summary: Creating a price
      operationId: CreatePlanPricingOption
      parameters:
        - name: planId
          in: path
          description: 'plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
        - name: api_key
          in: header
          description: 'API key'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricingOptionRequest'
        required: true
      responses:
        '200':
          description: 'operation performed successfully'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingOptionResponse'
        '400':
          description: 'Validation error'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
    get:
      tags:
        - Prices
      summary: consulting a plan's prices
      operationId: GetPlanPricingOptions
      parameters:
        - name: planId
          in: path
          description: 'plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Consultation successful'
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PricingOptionResponse'
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /plans/{planId}/pricing-options/{pricingOptionId}:
    get:
      tags:
        - Prices
      summary: consulting a plan's prices
      operationId: GetSpecificPlanPricingOptions
      parameters:
        - name: planId
          in: path
          description: 'plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
        - name: pricingOptionId
          in: path
          description: 'price Id'
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Consultation successful'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Plan or price not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    put:
      tags:
        - Prices
      summary: Updating a price
      operationId: UpdatePriceOption
      parameters:
        - name: planId
          in: path
          description: 'Plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
        - name: pricingOptionId
          in: path
          description: 'Price Id'
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricingOptionRequest'
        required: true
      responses:
        '200':
          description: 'Consultation successful'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingOptionResponse'
        '400':
          description: 'Data validation error'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Plan or price not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
    delete:
      tags:
        - Prices
      summary: Removing a price
      operationId: Deletepriceoption
      parameters:
        - name: planId
          in: path
          description: 'Plan Id'
          required: true
          style: simple
          schema:
            type: integer
            example: 1234
        - name: pricingOptionId
          in: path
          description: 'Price Id'
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '204':
          description: 'operation performed successfully'
          headers: {}
        '404':
          description: 'Plan or price not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '409':
          description: 'Conflict in removing the price. Analyze reply message'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
    
  # ROUTES PLANS CHECKOUT
  
  /plans/{planId}/pricing-options/{pricingOptionId}/checkout:
    post:
      tags:
        - Plans - Checkout's page
      summary: Creatiing checkout page
      operationId: CreatePlanCheckout
      parameters:
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanCheckoutRequest'
            example:
              valid_until: 2020-09-12T22:33:11
              is_time_defined: false
              coupon_enabled: false
              checkout_type: step
        required: true
      responses:
        '200':
          description: 'Checkout page successfully created'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanCheckoutResponse'
        '404':
          description: 'Data to create checkout not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '409':
          description: 'Consultation successful'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    get:
      tags:
        - Plans - Checkout page
      summary: Consulting checkout page
      operationId: CreatePlanCheckout
      parameters:
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanCheckoutRequest'
            example:
              valid_until: null
              checkout_type: step
        required: true
      responses:
        '200':
          description: 'Consultation successful'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanCheckoutResponse'
        '404':
          description: 'Data to create checkout not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /plans/{planId}/checkout:
    get:
      tags:
        - Plans - Checkout page
      summary: consulting a plan's checkouts
      operationId: GetPlanCheckout
      parameters:
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Consultation successful'
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanCheckoutResponse'
        '404':
          description: 'Plan not found'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /plans/{planId}/pricing-options/{pricingOptionId}/checkout/{checkoutId}:
    put:
      tags:
        - Planos - Página de Checkout
      summary: Atualizando dados de checkout
      operationId: UpdatePlanCheckout
      parameters:
        - name: api_key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanCheckoutRequest'
        required: true
      responses:
        '200':
          description: 'Checkout atualizado com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanCheckoutResponse'
        '404':
          description: 'Dado para atualização não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '409':
          description: 'Conflito, analisar objeto de retorno'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    
  # ROUTES CUSTOMERS PAYMENT LINK
 
  /customers/{customerId}/checkout/{checkoutId}:
    post:
      tags:
        - Clientes - Página de Checkout
      summary: Criando link de pagamento
      operationId: SubscribeLink
      parameters:
        - name: customerId
          in: path
          description: ID do assinante
          required: true
          deprecated: false
          schema:
            type: string
            format: uuid
        - name: checkoutId
          in: path
          description: ID do checkout de um plano
          required: true
          deprecated: false
          schema:
            type: integer
            format: int32
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: 'Link criado com sucesso'
          content: 
            application/json: 
              schema:
                type: object
                $ref: '#/components/schemas/CustomerCheckoutLinkResponse'
          headers: {}
        '404':
          description: 'Assinante ou checkout não encontrado'
          headers: {}
        '409':
          description: 'Erro de conflito ao criar link de pagamento, analisar resposta'
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /customers/{customerId}/checkout/{checkoutLinkId}/send:
    post:
      tags:
        - Clientes - Página de Checkout
      summary: Enviando link para o assinante
      operationId: SendSubscribeLink
      parameters:
        - name: customerId
          in: path
          description: ID do assinante
          required: true
          deprecated: false
          schema:
            type: string
            format: uuid
        - name: checkoutLinkId
          in: path
          description: ID do link de pagamento
          required: true
          deprecated: false
          schema:
            type: integer
            format: int32
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
      responses:
        '200':
          description: 'Link de pagamento enviado com sucesso.'
          headers: {}
          content:
            application/json:
              schema:
                type: object
        '403':
          description: 'Link de pagamento utilizado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Assinante não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '409':
          description: 'Conflito na requisição, verificar resposta'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /customers/{customerId}/checkout/{checkoutLinkId}:
    delete:
      tags:
        - Clientes - Página de Checkout
      summary: Removendo link de pagamento
      operationId: DeleteCustomerLink
      parameters:
        - name: customerId
          in: path
          description: ID do assinante
          required: true
          deprecated: false
          schema:
            type: string
            format: uuid
        - name: checkoutLinkId
          in: path
          description: ID do link de pagamento
          required: true
          deprecated: false
          schema:
            type: integer
            format: int32
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
      responses:
        '200':
          description: 'Link removido com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                type: 'object'
        '404':
          description: 'Link de pagamento não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '409':
          description: 'Link de pagamento já utilizado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /customers/{customerId}/checkout:
    get:
      tags:
        - Clientes - Página de Checkout
      summary: Consultando links de pagamento
      operationId: GetSubscribeLink
      parameters:
        - name: customerId
          in: path
          description: ID do assinante
          required: true
          deprecated: false
          schema:
            type: string
            format: uuid
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
      responses:
        '200':
          description: 'Consulta realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerCheckoutLinkResponse'
        '404':
          description: 'Dados não encontrados'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES CUSTOMERS
  /customers:
    
    post:
      tags:
        - Assinantes
      summary: Criando um assinante
      operationId: CreateCustomer
      parameters:
        - name: api_key
          in: header
          description: 'Chave de API'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
            example:
              first_name: Lucas
              last_name: Nalon
              email: lucas.nalon3@veripag.com.br
              billing_address:
                address_country_code: PER
                postal_code: 05128000
                street1: Rua Willis Roberto Banks
                district: Parque Maria Domitila
                city: São Paulo
                state: SP
                number: '549'
              mobile_number: +55 (31) 232132132
              birth: 22/03/2000
              gender: M
              country_code: BR
              document:
                type: DNI
                number: 63694935T
              cc_emails: []
              tax_exempt: false
              phones: []
              vat_number: ''
              shipping_address:
                - address_country_code: PER
                  postal_code: 05128000
                  street1: Rua Willis Roberto Banks
                  district: Parque Maria Domitila
                  city: São Paulo
                  state: SP
                  number: '549'
                  is_main: 'true'
                - address_country_code: PER
                  postal_code: 05128000
                  street1: Rua Willis Roberto Banks
                  district: Parque Maria Domitila
                  city: São Paulo
                  state: SP
                  number: '549'
                  is_main: 'false'
        required: true
      responses:
        '200':
          description: 'Assinante cadastrado com sucesso'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: 'Erro na validação do objeto recebido'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListErrorResponse'
        '409':
          description: 'E-mail do assinante já cadastrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    get:
      tags:
        - Assinantes
      summary: Consultando assinantes
      operationId: GetCustomerList
      parameters:
        - name: Name
          in: query
          description: Nome
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: Email
          in: query
          description: E-mail
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: DocumentType
          in: query
          description: Tipo de Documento
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: DocumentNumber
          in: query
          description: Número do documento
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: RefCode
          in: query
          description: Código de referência
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: MobileNumber
          in: query
          description: Número do telefone
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: Active
          in: query
          description: Status do assinante
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: api_key
          in: header
          description: 'Chave de API'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Consulta realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ListingCustomers'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /customers/{customerId}:
    get:
      tags:
        - Assinantes
      summary: Consultando um assinante
      operationId: GetSpecificCustomer
      parameters:
        - name: customerId
          in: path
          description: 'Id do assinante'
          required: true
          style: simple
          schema:
            type: string
            example: 208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: api_key
          in: header
          description: 'Chave de API'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Consulta realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/CustomerResponse'

        '404':
          description: 'Assinante não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
    put:
      tags:
        - Assinantes
      summary: Atualizando dados de um assinante
      operationId: UpdateCustomer
      parameters:
        - name: customerId
          in: path
          description: 'Id do assinante'
          required: true
          style: simple
          schema:
            type: string
            example: 208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: api_key
          in: header
          description: 'Chave de API'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        '200':
          description: 'Alteração realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: 'Erro na validação dos dados recebidos'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
  /customers/{customerId}/active:
    put:
      tags:
        - Assinantes
      summary: Ativando um assinante
      operationId: ActivateCustomer
      parameters:
        - name: customerId
          in: path
          description: 'Id do assinante'
          required: true
          style: simple
          schema:
            type: string
            example: 208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: api_key
          in: header
          description: 'Chave de API'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Operação realizada com sucesso'
          headers: {}
        '400':
          description: 'Assinante já ativo'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Assinante não encontrado'
          headers: {}  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /customers/{customerId}/inactive:
    put:
      tags:
        - Assinantes
      summary: Inativando um assinante
      operationId: InactiveCustomer
      parameters:
        - name: customerId
          in: path
          description: 'Id do assinante'
          required: true
          style: simple
          schema:
            type: string
            example: 208e6954b8f46967beb4a154660e7f8d0e5ea33b
        - name: api_key
          in: header
          description: 'Chave de API'
          required: true
          style: simple
          schema:
            type: string
            example: ak_sandbox_208e6954b8f46967beb4a154660e7f8d0e5ea33b
      responses:
        '200':
          description: 'Operação realizada com sucesso'
          headers: {}
        '400':
          description: 'Assinante já inativo'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Assinante não encontrado'
          headers: {}  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /customers/d5b644a7-73fd-44d9-b7d5-2c2705588324/forgot:
    put:
      tags:
        - Customers
      summary: Forgot Password
      operationId: ForgotPassword
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES SUBSCRIPTIONS
  /subscriptions:
    get:
      tags:
        - Subscription
      summary: Get List Subscriptions
      operationId: GetListSubscriptions
      parameters:
        - name: subscriptionStatus
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: active
        - name: simpleresponse
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    post:
      tags:
        - Subscription
      summary: Create Subsctiption
      operationId: CreateSubsctiption
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubsctiptionRequest'
            example:
              customer_id: 7ddd9873-b8bc-4bf8-b771-9a5e2ddf14af
              payment_mean_id: 539
              plan_id: 1602
              pricing_option_id: 310af377-7641-4c0e-85fd-bc316b606330
              initial_charge_date: null
              shop_id: c675048c-fea7-41cc-97da-e71c1eadb69e
              enable_suspension: false
              enable_user_cancelation: true
              auto_renew: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/2166/sales/future:
    get:
      tags:
        - Subscription
      summary: Forecast
      operationId: Forecast
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/1799:
    get:
      tags:
        - Subscription
      summary: Get Specific Subscription
      operationId: GetSpecificSubscription
      parameters:
        - name: simpleResponse
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'Tue, 04 Sep 2018 22:03:03 GMT'
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Kestrel
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            X-Api-Environment:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Live
            X-Powered-By:
              content:
                text/plain:
                  schema:
                    type: string
                  example: ASP.NET
            X-SourceFiles:
              content:
                text/plain:
                  schema:
                    type: string
                  example: =?UTF-8?B?RDpcUHJvamVjdHNcYmlsbFxzb3VyY2VcYmlsbC1zZXJ2aWNlXEJJbGxTZXJ2aWNlXHYxXHN1YnNjcmlwdGlvblw1?=
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetSpecificSubscription'
              example:
                subscription_id: 5
                subscription_code: 6461FHQI38
                plan:
                  name: PLANO 01 diary
                  soft_descriptor: testetesteteste
                  description: Plano cobrado diariamente
                  payment_definitions:
                    amount: 9900
                    installments: 1
                    charge_settings:
                      billing_day: '4'
                      due_day: '15'
                    setup_fee: 0
                    cancelation_fee: 0
                  trial_days: 0
                  enable_off_date: false
                  generation_date: '8'
                  shop_code: A3Q9L2AEDX
                  create_date: '2018-09-04T20:33:07.8'
                  update_date: null
                  active: false
                customer:
                  customer_id: 3d505be0-31bf-4b7d-83b1-08469cf041f4
                  email: lucas.nalon@veripag.com.br
                  phone:
                    number: '951578656'
                    phone_prefix: ''
                    dial_prefix: ''
                  first_name: Lucas
                  last_name: Nalon
                  birth: '2000-04-26T00:00:00Z'
                  document:
                    type: CPF
                    number: '35679236842'
                  create_date: '2018-09-04T20:46:08.89'
                  update_date: null
                  active: true
                shop:
                  name: VERIPAG SHOP
                  tax_id: 80.309.970/0001-02
                  email: example@veripag.com.br
                  reference_code: Y6KL5R3DCL
                  create_date: '2018-09-04T20:54:45.387'
                  update_date: null
                notification:
                  sms: true
                  email: false
                type: service
                create_date: '2018-09-04T21:36:19.24'
                update_date: null
                active: true
                invoices:
                  - invoice_code: 77HEKMPP6L
                    status: PENDENTE
                    billing_date: '2018-10-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.173'
                    update_date: null
                  - invoice_code: TQGJ15A7SQ
                    status: PENDENTE
                    billing_date: '2018-11-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.18'
                    update_date: null
                  - invoice_code: 1XLRTR7M8C
                    status: PENDENTE
                    billing_date: '2018-12-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.183'
                    update_date: null
                  - invoice_code: K3TX4X9M0W
                    status: PENDENTE
                    billing_date: '2019-01-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.187'
                    update_date: null
                  - invoice_code: UVTZFNBBQC
                    status: PENDENTE
                    billing_date: '2019-02-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.193'
                    update_date: null
                  - invoice_code: J6BFR0OHQS
                    status: PENDENTE
                    billing_date: '2019-03-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.197'
                    update_date: null
                  - invoice_code: 9ZCY7BU9GN
                    status: PENDENTE
                    billing_date: '2019-04-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.197'
                    update_date: null
                  - invoice_code: MWVB14BQJZ
                    status: PENDENTE
                    billing_date: '2019-05-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.197'
                    update_date: null
                  - invoice_code: WZTG63RX71
                    status: PENDENTE
                    billing_date: '2019-06-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.2'
                    update_date: null
                  - invoice_code: 7I6C0IW5DB
                    status: PENDENTE
                    billing_date: '2019-07-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.2'
                    update_date: null
                  - invoice_code: 6H66IQHZU1
                    status: PENDENTE
                    billing_date: '2019-08-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.203'
                    update_date: null
                  - invoice_code: F7YY9WZW2Q
                    status: PENDENTE
                    billing_date: '2019-09-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.203'
                    update_date: null
                  - invoice_code: JTLXXWJHPZ
                    status: PENDENTE
                    billing_date: '2019-10-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.203'
                    update_date: null
                  - invoice_code: E7TP8E1JPI
                    status: PENDENTE
                    billing_date: '2019-11-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.207'
                    update_date: null
                  - invoice_code: L4BD3KFHL9
                    status: PENDENTE
                    billing_date: '2019-12-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.207'
                    update_date: null
                  - invoice_code: HEHLK2HIK3
                    status: PENDENTE
                    billing_date: '2020-01-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.217'
                    update_date: null
                  - invoice_code: 561LEK73Z6
                    status: PENDENTE
                    billing_date: '2020-02-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.22'
                    update_date: null
                  - invoice_code: D65VJBG9BR
                    status: PENDENTE
                    billing_date: '2020-03-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.223'
                    update_date: null
                  - invoice_code: WC0DWFJVMK
                    status: PENDENTE
                    billing_date: '2020-04-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.223'
                    update_date: null
                  - invoice_code: YZXJGGPK4N
                    status: PENDENTE
                    billing_date: '2020-05-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.227'
                    update_date: null
                  - invoice_code: 80Z7MOKKQN
                    status: PENDENTE
                    billing_date: '2020-06-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.227'
                    update_date: null
                  - invoice_code: 2BLKPOC9BW
                    status: PENDENTE
                    billing_date: '2020-07-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.23'
                    update_date: null
                  - invoice_code: 24H8WUVDOZ
                    status: PENDENTE
                    billing_date: '2020-08-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.23'
                    update_date: null
                  - invoice_code: 35OYBNIE14
                    status: PENDENTE
                    billing_date: '2020-09-04T00:00:00'
                    create_date: '2018-09-04T21:36:28.23'
                    update_date: null
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/{subscription_code}/active:
    put:
      tags:
        - Subscription
      summary: Active subscription
      operationId: Activesubscription
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: subscription_code
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/1261/inactive:
    put:
      tags:
        - Subscription
      summary: Inactive Subscription
      operationId: InactiveSubscription
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/3377:
    put:
      tags:
        - Subscription
      summary: Change Subscription Status
      operationId: ChangeSubscriptionStatus
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionStatusRequest'
            example:
              status: active
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/payment-means:
    put:
      tags:
        - Subscription
      summary: Update PaymentMean
      operationId: UpdatePaymentMean
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentMeanRequest'
            example:
              payment_mean_id: DAILYPLAN001
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/2154/payment-means/send:
    post:
      tags:
        - Subscription
      summary: Send Update Payment Mean Email
      operationId: SendUpdatePaymentMeanEmail
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /subscriptions/1367:
    delete:
      tags:
        - Subscription
      summary: Remove pending subscription
      operationId: Removependingsubscription
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES COUPONS
  /coupons:
    post:
      tags:
        - Cupons
      summary: Criando um cupom
      operationId: CreateCoupon
      parameters:
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCouponRequest'
            example:
              plan_restrictions: null
        required: true
      responses:
        '200':
          description: 'Operação realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
        '400':
          description: 'Erro na validação dos dados'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      
    get:
      tags:
        - Cupons
      summary: Consultando cupons
      operationId: ConsultingCoupons
      parameters:
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCouponRequest'
            example:
              plan_restrictions: null
        required: true
      responses:
        '200':
          description: 'Consulta realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingCoupons'
      deprecated: false
      security: []
      
  /coupons/{couponId}:
    get:
      tags:
        - Cupons
      summary: Consultando um cupom
      operationId: GetCoupon
      parameters:
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
        - name: couponId
          in: path
          description: Id do cupom
          required: true
          schema:
            type: string
            format: 'uuid'
      responses:
        '200':
          description: 'Consulta realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
        '404':
          description: 'Cupom não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      
    put:
      tags:
        - Cupons
      summary: Editando um cupom
      operationId: EditCoupon
      parameters:
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
        - name: couponId
          in: path
          description: Id do cupom
          required: true
          schema:
            type: string
            format: 'uuid'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRequestEdit'
            example:
              plan_restrictions: null
        required: true
      responses:
        '200':
          description: 'Operação realizada com sucesso'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
        '400':
          description: 'Erro na validação dos dados'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
        '404':
          description: 'Cupom não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      
  /coupons/{couponId}/active:
    put:
      tags:
        - Cupons
      summary: Ativando um cupom
      operationId: ActiveCoupon
      parameters:
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
        - name: couponId
          in: path
          description: Id do cupom
          required: true
          schema:
            type: string
            format: 'uuid'
      responses:
        '200':
          description: 'Operação realizada com sucesso'
          headers: {}
        '404':
          description: 'Cupom não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /coupons/{couponId}/inactive:
    put:
      tags:
        - Cupons
      summary: Inativando um cupom
      operationId: InactiveCoupon
      parameters:
        - name: api_key
          in: header
          description: Chave de API
          required: true
          schema:
            type: string
            format: 'api key'
        - name: couponId
          in: path
          description: Id do cupom
          required: true
          schema:
            type: string
            format: 'uuid'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InactiveCouponRequest'
            example:
              reason: Motivo para o cancelamento
        required: true
      responses:
        '200':
          description: 'Operação realizada com sucesso'
          headers: {}
        '404':
          description: 'Cupom não encontrado'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponse'
      deprecated: false
      security: []
  
  
  /plan/1026/taxes:
    get:
      tags:
        - Taxes
      summary: Get Taxes In Company
      operationId: GetTaxesInCompany
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES TRANSACTIONS
  /transactions:
    get:
      tags:
        - Transaction
      summary: Get list transactions
      operationId: Getlisttransactions
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /transactions/report:
    get:
      tags:
        - Transaction
      summary: Report
      operationId: GetReport123
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /transactions/check:
    put:
      tags:
        - Transaction
      summary: Create Transaction By Payzen UUID
      operationId: CreateTransactionByPayzenUUID
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - invoiceCode
                - gatewayUuid
                - subscriptionId
              type: object
              properties:
                invoiceCode:
                  type: string
                  example: 9Z6LQ7HCGD
                gatewayUuid:
                  type: string
                  example: 6b0d5c982a574dc987312a8c9bb55d38
                subscriptionId:
                  type: integer
                  format: int32
                  example: 1303
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /transactions/4431ffb8-45f4-4757-9a83-0d04281e6956:
    get:
      tags:
        - Transaction
      summary: Get specific transactions
      operationId: Getspecifictransactions
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /transactions/1547/CTCVTJ61J9/d8a6a3e32b714c5189d87ca08548a20f:
    post:
      tags:
        - Transaction
      summary: Create Transaction By Payzen UUID
      operationId: PostCreateTransactionByPayzenUUID
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - invoiceCode
                - gatewayUuid
                - subscriptionId
              type: object
              properties:
                invoiceCode:
                  type: string
                  example: 9Z6LQ7HCGD
                gatewayUuid:
                  type: string
                  example: 6b0d5c982a574dc987312a8c9bb55d38
                subscriptionId:
                  type: integer
                  format: int32
                  example: 1303
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /transactions/uuids:
    post:
      tags:
        - Transaction
      summary: Add missing transactions
      operationId: Addmissingtransactions
      parameters:
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Authorization
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddmissingtransactionsRequest'
              description: ''
            example:
              - code: O65D4PZYOU
                uuid: f385a92d6e704bbb971468044def64b8
              - code: AEWG4PGZEA
                uuid: 01efb36bc2cb41908b2e8048dc4742f5
              - code: 2HWD37QL57
                uuid: 96d9c5bfed394178be85964bbbe0df98
              - code: W4K5MCC7RE
                uuid: f707c4d8f6484d57bc8f1393f0b19167
              - code: Y64NXPVE5J
                uuid: 0c63495724ce40ac8235b4fe75d65937
              - code: BHRKLCAH5P
                uuid: 8fe497cb80634680bf146caab178cc87
              - code: DB0WGW5K60
                uuid: 60e088676a5d40cf881bdc125e937148
              - code: P2TAQB9SJK
                uuid: da82b85b8d504aaaad32c752fecda5bf
              - code: HW2VQ61N8J
                uuid: 6ec717ea771e488c9490887fb4d702cf
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  
  # ROUTES SALES
  /sales:
    get:
      tags:
        - Sales
      summary: Get Sales
      description: "Códigos de status:\r\n \r\n review = 1,\r\n pending = 2,\r\n paid = 3,\r\n canceled = 4,\r\n scheduled = 5,\r\n created = 6,\r\n suspended = 7,\r\n blocked = 8"
      operationId: GetSales
      parameters:
        - name: count
          in: query
          description: quantidade de itens por página
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 100
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    post:
      tags:
        - Sales
      summary: Create Sale
      operationId: CreateSale
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSaleRequest'
            example:
              customer_id: 36a821fa-bf11-410d-b426-2bc0b10e4615
              amount: 2990
              currency: BRL
              description: teste de venda
              payment_mean_id: 147
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/report:
    get:
      tags:
        - Sales
      summary: Sale Report
      description: Códigos de status:\r\n \r\n review = 1,\r\n pending = 2,\r\n paid = 3,\r\n canceled = 4,\r\n scheduled = 5,\r\n created = 6,\r\n suspended = 7,\r\n blocked = 8
      operationId: SaleReport
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/3139:
    get:
      tags:
        - Sales
      summary: Get Sales Specified
      operationId: GetSalesSpecified
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/print:
    get:
      tags:
        - Sales
      summary: Print - Get Sales Specified
      operationId: Print-GetSalesSpecified
      parameters:
        - name: code
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 5PXZTYG0SC
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/20:
    put:
      tags:
        - Sales
      summary: Create Sales
      operationId: CreateSales
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/9HHZEAWPTI/charge:
    put:
      tags:
        - Sales
      summary: Charge Sale
      operationId: ChargeSale
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/3451:
    delete:
      tags:
        - Sales
      summary: Refund Sale
      operationId: RefundSale
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundSaleRequest'
            example:
              amount: 1000
              mode: REFUND
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /sales/3462:
    delete:
      tags:
        - Sales
      summary: Cancel Sale
      operationId: CancelSale
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSaleRequest'
            example:
              mode: CANCELLATION
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}

  # ROUTES CHECKOUT CONFIGURATIONS 
  /checkout/configurations/fields:
    put:
      tags:
        - Configuration
      summary: Set Checkout Fields
      operationId: SetCheckoutFields
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCheckoutFieldsRequest'
            example:
              checkout_config:
                billing_address: true
                country_code: false
                document: false
                email: true
                first_name: true
                last_name: true
                mobile_number: true
                shipping_address: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
    get:
      tags:
        - Configuration
      summary: Get Checkout Configuration
      operationId: GetCheckoutConfiguration
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /checkout/configurations/disable-mail:
    put:
      tags:
        - Configuration
      summary: Disable Same Mail Checkout Register
      operationId: DisableSameMailCheckoutRegister
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
  /checkout/configurations/enable-mail:
    put:
      tags:
        - Configuration
      summary: Enable Same Mail Checkout Register Copy
      operationId: EnableSameMailCheckoutRegisterCopy
      parameters:
        - name: Authorization
          in: header
          description: Token according to the Login
          required: true
          style: simple
          schema:
            type: string
            example: '{{token}}'
        - name: mode
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: live
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: 'http://example.com/v1'
          variables: {}
components:
  schemas:
    # ERRORS
    SimpleErrorResponse:
      title: SimpleErrorResponse
      properties:
        error_code:
          type: integer
        message:
          type: string
        parameter_name:
          type: string
    ListErrorResponse:
      title: ListErrorResponse
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SimpleErrorResponse'
    
    # MODELS COMMMONS

    AddressRequest:
      title: AddressRequest
      required:
        - street1
        - number
        - postal_code
        - country_code
        - district
        - city
        - state
      type: object
      properties:
        address_code:
          type: string
          format: uuid
          description: Id do endereço
        street1:
          type: string
          description: Endereço 1
        street2:
          type: string
          description: Endereço 2
        number:
          type: string
          description: Número do endereço
        district:
          type: string
          description: Bairro ou distrito
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: Estado
        address_country_code:
          type: string
          description: Código do país. Utilizar código ALPHA3 da ISO 3166
        postal_code:
          type: string
          description: Código postal
        additional_info:
          type: string
          description: Complemento adicional ao endereço
        is_main:
          type: boolean
          description: Idenfiticador de Endereço Principal. Usado para ShippingAddress
      example:
        address_code: 976a22a7-535a-4e16-a6c2-db96beab95c7
        street1: Av. Queiroz Filho
        street2: ''
        number: '1560'
        complement: Torre Beija Flor 4º andar
        postal_code: '06123456'
        district: Vila Leopoldina
        city: São Paulo
        state: SP
        address_country_code: BRA
        
    AddressReponse:
      title: AddressResponse
      type: object
      properties:
        address_code:
          type: string
          format: uuid
          description: Id do endereço
        street1:
          type: string
          description: Endereço 1
        street2:
          type: string
          description: Endereço 2
        number:
          type: string
          description: Número do endereço
        district:
          type: string
          description: Bairro ou distrito
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: Estado
        address_country_code:
          type: string
          description: Código do país. Utilizar código ALPHA3 da ISO 3166
        postal_code:
          type: string
          description: Código postal
        additional_info:
          type: string
          description: Complemento adicional ao endereço
      example:
        address_code: 976a22a7-535a-4e16-a6c2-db96beab95c7
        street1: Av. Queiroz Filho
        street2: ''
        number: '1560'
        complement: Torre Beija Flor 4º andar
        postal_code: '06123456'
        district: Vila Leopoldina
        city: São Paulo
        state: SP
        address_country_code: BRA

    Document:
      title: Document
      required:
        - type
        - number
      type: object
      properties:
        type:
          type: string
          description: Tipo do documento
        number:
          type: string
          description: Número do documento
      example:
        type: CPF
        number: 01234567890
    
    Phone:
      title: Phone
      required:
        - type
        - number
      type: object
      properties:
        type:
          type: string
          description: Tipo do telefone - "mobile", "home", "commercial" ou "other"
        number:
          type: string
          description: Número do telefone
      example:
        type: mobile
        number: '11988822222'

    # MODELS CUSTOMERS

    ListingCustomers:
      title: ListingCustomers
      type: object
      properties:
        total_items: 
          type: integer
          description: Total de itens
        total_pages:
          type: integer
          description: Total de páginas
        quantity_page:
          type: integer
          description: Quantiade de itens por página
        actual_page:
          type: integer
          description: Página consultada
        items: 
          type: array
          description: Itens consultados
          items:
            $ref: '#/components/schemas/CustomerResponse'

    CustomerRequest:
      title: CustomerRequest
      required:
        - first_name
        - last_name
        - email
        - mobile_number
        - country_code
      type: object
      properties:
        first_name:
          type: string 
          description: Primeiro nome do assinante
        last_name:
          type: string
          description: Último nome do assinante
        ref_code:
          type: string
          description: Código de referência do Assinante. Geralmente um id de sua plataforma
        email:
          type: string
          description: Endereço de e-mail
        billing_address:
          $ref: '#/components/schemas/AddressRequest'
          description: Endereço de cobrança
        mobile_number:
          type: string
          description: Número de telefone principal
        birth:
          type: string
          description: Data de nascimento
        gender:
          type: string
          description: Genêro do assinante. M, F ou O
        country_code:
          type: string
          description: Código do país do assinante. Usar Alpha3 ISO 3166
        document:
          $ref: '#/components/schemas/Document'
          description: Documento do assinante
        cc_emails:
          type: array
          items:
            type: string
          description: 'Lista de endereços de e-mail, para notificação em cópia'
        tax_exempt:
          type: boolean
          description: Identificador de isenção fiscal
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
          description: 'Lista de número de telefones'
        vat_number:
          type: string
          description: VAT
        shipping_address:
          type: array
          items:
            $ref: '#/components/schemas/AddressRequest'
          description: 'Endereços de entrega'
      example:
        first_name: Cyclopay
        last_name: Assinante
        email: cyclo@veripag.com.br
        mobile_number: +55 (31) 232132132
        country_code: BRA
    
    CustomerResponse:
      title: CustomerRequest
      type: object
      properties:
        customer_id:
          type: string
          format: uuid
          description: Id do assinante
        first_name:
          type: string 
          description: Primeiro nome do assinante
        last_name:
          type: string
          description: Último nome do assinante
        email:
          type: string
          description: Endereço de e-mail
        billing_address:
          $ref: '#/components/schemas/AddressRequest'
          description: Endereço de cobrança
        mobile_number:
          type: string
          description: Número de telefone principal
        birth:
          type: string
          description: Data de nascimento
        gender:
          type: string
          description: Genêro do assinante. M, F ou O
        country_code:
          type: string
          description: Código do país do assinante. Usar Alpha3 ISO 3166
        document:
          $ref: '#/components/schemas/Document'
          description: Documento do assinante
        cc_emails:
          type: array
          items:
            type: string
          description: 'Lista de endereços de e-mail, para notificação em cópia'
        tax_exempt:
          type: boolean
          description: Identificador de isenção fiscal
        phones:
          type: array
          items:
            type: string
          description: 'Lista de número de telefones'
        vat_number:
          type: string
          description: VAT
        shipping_address:
          type: array
          items:
            $ref: '#/components/schemas/AddressRequest'
          description: 'Endereços de entrega'
        cancel_date:
          type: string
          format: date-time
          description: Data de cancelamento
        create_date:
          type: string
          format: date-time
          description: Data de criação
        update_date:
          type: string
          format: date-time
          description: Data de atualização
        active:
          type: boolean
          description: Status do assinante

    # MODELS PLANS

    ListingPlans:
      title: ListingCustomers
      type: object
      properties:
        total_items: 
          type: integer
          description: Total de itens
        total_pages:
          type: integer
          description: Total de páginas
        quantity_page:
          type: integer
          description: Quantiade de itens por página
        actual_page:
          type: integer
          description: Página consultada
        items: 
          type: array
          description: Itens consultados
          items:
            $ref: '#/components/schemas/PlansResponse'

    PlanRequest:
      title: PlanRequest
      required:
        - name
        - pricing_options
        - payment_methods
      properties:
        name:
          type: string
          description: Plan name
        plan_code:
          type: string
          description: plan code
        description:
          type: string
          description: Plan description
        taxable:
          type: boolean
          description: Rate identifier on the plan
        tax_code:
          type: string
          description: Registered tax code 
        tax_included:
          type: string
          description: Rate checker included or not on the plan price
        pricing_options:
          type: array
          description: Plan prices
          items:
            $ref: '#/components/schemas/CreatePlanPricingOptionRequest'
        payment_methods:
          type: string
          description: Payment method enabled in the plan - [credit_card or boleto]
        metadata:
          type: object
          description: Free object
        callback_url:
          type: string
          description: Callback Url
        redirect_url_on_success:
          type: string
          description: Redirect URL on successful checkout payment
        redirect_url_on_failure:
          type: string
          description: Redirect URL in case of checkout payment failure
        enable_customer_suspension:
          type: boolean
          description: Flag to identify that the subscriber can suspend the plan
        enable_customer_cancelation:
          type: boolean
          description: Flag to identify that the subscriber can cancel the plan
        require_billing_address:
          type: boolean
          description: Flag to identify that the subscriber needs a billing address to complete the plan subscription
        require_shipping_address:
          type: boolean
          description: Flag to identify that the subscriber needs a delivery address to complete the plan subscription
        
    PlansResponse:
      title: PlansResponse
      properties:
        plan_id:
          type: integer
          description: Plan Id
        name:
          type: string
          description: Plan name 
        plan_code:
          type: string
          description: Plan code
        description:
          type: string
          description: Plan description
        taxable:
          type: boolean
          description: Rate identifier on the plan
        tax_code:
          type: string
          description: Registered tax code
        tax_included:
          type: string
          description: Rate checker included or not on the plan price
        pricing_options:
          type: array
          description: Plan prices
          items:
            $ref: '#/components/schemas/PricingOptionResponse'
        payment_methods:
          type: string
          description: Payment method enabled on the plan - [credit card or boleto]
        metadata:
          type: object
          description: Free object
        callback_url:
          type: string
          description: Callback URL
        redirect_url_on_success:
          type: string
          description: Redirect URL on successful checkout payment
        redirect_url_on_failure:
          type: string
          description: Redirect URL in case of checkout payment failure
        enable_customer_suspension:
          type: boolean
          description: Flag to identify that the subscriber can suspend the plan
        enable_customer_cancelation:
          type: boolean
          description: Flag to identify that the subscriber can cancel the plan
        require_billing_address:
          type: boolean
          description: Flag para identificar que o assinante necessita de endereço de cobrança para concluir a assinatura do plano
        require_shipping_address:
          type: boolean
          description:  Flag to identify that the subscriber needs a delivery address to complete the plan subscription
        status:
          type: string
          description: Plan Status, active | inactive
        create_date:
          type: string
          format: date-time
          description: Creation date of the Plan
        update_date: 
          type: string
          format: date-time
          description: Data de atualização do plano
        active: 
          type: boolean
          description: Flag to identificate the plan status

    PricingOptionRequest:
      title: PricingOptionRequest
      required:
        - amount
        - currency
        - count
        - interval
        - frequency
        - auto_renew
      type: object
      properties:
        amount:
          type: integer
          format: int32
          description: Price value in cents
        pricing_code:
          type: string
          description: Price code, When not sent, will be generated via server
        currency:
          type: string
          description: Price currency, need utilize ALPHA3 of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
        setup_fee:
          type: integer
          format: int32
          description: Setup valor in cents
        count:
          type: integer
          format: int32
          description: Amount of charges for this plan. 0 for infinite charges
        interval:
          type: integer
          format: int32
          description: Charging interval
        frequency:
          type: string
          description: Billing frequency, use DAILY, MONTLHY or YEARLY
        rrule:
          type: string
          description: String RRULE of the desired billing periodicity. RRULE follows the RFC 5545 standard
        auto_renew:
          type: boolean
          description: Automatic renewal identifier.
        trial_amount:
          type: integer
          format: int32
          description: TRIAL - Price in cents
        trial_interval:
          type: integer
          format: int32
          description: TRIAL - Number of trial charges
        trial_unit:
          type: string
          description: TRIAL - Trial periodicity, use DAILY, MONTLHY or YEARLY
        is_default:
          type: boolean
          description: Main price identifier. When more than one price is created it becomes mandatory
        billing_day:
          type: integer
          format: int32
          description: Day to be charged, when not defined, charges will be made on the day of subscription
      example:
      - amount: 11300
        pricing_code: ALHS22SX
        currency: BRL
        count: 1
        interval: 1
        frequency: MONTHLY
        auto_renew: false
        trial_amount: 0
        trial_interval: 0
        setup_fee: 0
        trial_unit: MONTHLY
        is_default: true
        billing_day: 5

    PricingOptionResponse:
      title: PricingOptionResponse
      required:
        - amount
        - currency
        - count
        - interval
        - frequency
        - auto_renew
      type: object
      properties:
        amount:
          type: integer
          format: int32
          description: Price valor in cents
        pricing_code:
          type: string
          description: Price code, When not sent, will be generated via server
        currency:
          type: string
          description: Price currency, need to utilize ALPHA3 of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
        setup_fee:
          type: integer
          format: int32
          description: Setup valor in cents
        count:
          type: integer
          format: int32
          description: Amount of charges for this plan. 0 for infinite charges
        interval:
          type: integer
          format: int32
          description: Charging interval
        frequency:
          type: string
          description: Billing frequency, use DAILY, MONTLHY or YEARLY
        rrule:
          type: string
          description: String RRULE of the desired billing periodicity. RRULE follows the RFC 5545 standard
        auto_renew:
          type: boolean
          description: Automatic renewal identifier.
        trial_amount:
          type: integer
          format: int32
          description: TRIAL - Price in cents
        trial_interval:
          type: integer
          format: int32
          description: TRIAL - Number of trial charges
        trial_unit:
          type: string
          description: TRIAL - Trial periodicity, use DAILY, MONTLHY or YEARLY 
        is_default:
          type: boolean
          description: Main price identifier. When more than one price is created it becomes mandatory
        created_method:
          type: string
          description: Price creation method
        create_date:
          type: string
          format: date-time
          description: Price cration date
        update_date:
          type: string
          format: date-time
          description: Price update date
        created_by:
          type: string
          description: Name of the user who created the price
        user_id:
          type: integer
          format: int32
          description: Id of the user who created the price
      
    # MODELS COUPONS

    ListingCoupons:
      title: ListingCoupons
      type: object
      properties:
        total_items: 
         type: integer
         description: Total items
        total_pages:
         type: integer
         description: Total pages
        quantity_page:
         type: integer
         description: Amount of items per page
        actual_page:
         type: integer
         description: Page consulted
        items: 
         type: array
         description: Consulted items
         items:
           $ref: '#/components/schemas/CouponResponse'

    CouponResponse:
      title: CouponResponse
      required:
        - name
        - coupon_code
        - description
        - percentage
        - amount
        - count
        - expiry_date
        - currency
      type: object
      properties:
        coupon_id:
          type: string
          format: uuid
          description: coupon id
        name:
          type: string
          description: Coupon name
        coupon_code:
          type: string
          description: Coupon code
        description:
          type: string
          description: Coupon description
        percentage:
          type: number
          description: Coupon discount percentage
        amount:
          type: integer
          format: int32
          description: Coupon discount amount in cents
        count:
          type: integer
          format: int32
          description: Coupon quantity
        expiry_date:
          type: string
          description: Coupon expiration date
        plan_restrictions:
          type: array
          items:
            type: integer
            format: int32
          description: Plans that can use the coupon. When empty, the coupon is valid for all plans
        usage:
          type: string
          description: Number of coupons used
        status:
          type: string
          description: Status
        status_reason:
          type: string
          description: Status reason
        created_by:
          type: string
          description: Name of the user who created
        create_date:
          type: string
          format: date-time
          description: Creation date.
        update_date:
          type: string
          format: date-time
          description: Update date

    CouponRequestEdit:
      title: CouponRequestEdit
      type: object
      properties:
        description:
          type: string
          description: Coupon description
        count:
          type: integer
          format: int32
          description: Number of coupons
        expiry_date:
          type: string
          description: Coupon expiration date
        plan_restrictions:
          type: array
          items:
            type: integer
            format: int32
          description: Plans that can use the coupon. When empty, the coupon is valid for all plans

    CouponRequest:
      title: CouponRequest
      required:
        - name
        - coupon_code
        - description
        - percentage
        - amount
        - count
        - expiry_date
        - currency
      type: object
      properties:
        name:
          type: string
          description: Coupon name
        coupon_code:
          type: string
          description: Coupon code
        description:
          type: string
          description: Coupon description
        percentage:
          type: number
          description: Coupon discount percentage
        amount:
          type: integer
          format: int32
          description: Coupon discount amount in cents
        count:
          type: integer
          format: int32
          description: Number of coupons
        expiry_date:
          type: string
          description: Coupon expiration date
        plan_restrictions:
          type: array
          items:
            type: integer
            format: int32
          description: Plans that can use the coupon. When empty, the coupon is valid for all plans
        currency:
          type: string
          description: Coupon currency, when set amount. Using AlphaCode, ISO 4217

    # MODELS SUBSCRIPTIONS

    # MODELS SALES

    # MODELS TRANSACTIONS

    # MODELS SHOP

    # MODELS 

    CustomerCheckoutLinkResponse:
      title: CustomerCheckoutLinkResponse
      properties:
        plan_checkout_link_id:
          type: integer
          description: Id do link de pagamento
        checkout_id:
          type: integer
          description: Id do checkout
        plan_id:
          type: integer
          description: Id do plano
        pricing_option_id:
          type: string
          description: Id do preço do plano
        pricing_option:
          type: object
          description: Detalhes do preço utilizado
        customer_id:
          type: string
          description: Id do assinante
        expiry_date:
          type: string
          format: date-time
          description: Data UTC do expiração do link
        hash:
          type: string
          description: Código hash do link
        is_used:
          type: boolean
          description: Flag para identificar se o link já foi utilizado
        url:
          type: string
          description: URL de acesso ao link de pagamento
        status:
          type: string
          description: Status do link de pagamento 
    PlanCheckoutResponse:
      title: PlanCheckoutResponse
      properties:
        checkout_id:
          type: integer
          description: Id do chekout
        plan_id:
          type: integer
          description: Id do plano
        pricing_option_id:
          type: string
          description: Id do preço
        hash:
          type: string
          description: Hash do checkout
        valid_until:
          type: string
          format: date-time
          description: Data UTC de expiração do checkout
        is_time_defined:
          type: boolean
          description: Flag de validação de horário na expiração do checkout
        url:
          type: string
          description: Url de acesso para o checkout
        create_date:
          type: string
          format: date-time
          description: Data de criação do checkout
        update_date:
          type: string
          format: date-time
          description: Data de criação do checkout
        status:
          type: string
          description: Status do checkout
        checkout_type:
          type: string
          description: Tipo do checkout
        coupon_enabled:
          type: boolean
          description: Flag para habilitar cupom no checkout
    CreateCompanyRequest:
      title: CreateCompanyRequest
      required:
        - name
        - adm_name
        - adm_email
        - legal_name
        - document_type
        - document_number
        - country_code
        - website
        - description
        - category
        - phone_number
        - address
        - payment_configuration
        - cyclo
        - metadata
        - is_provider
      type: object
      properties:
        name:
          type: string
        adm_name:
          type: string
        adm_email:
          type: string
        legal_name:
          type: string
        document_type:
          type: string
        document_number:
          type: string
        country_code:
          type: string
        website:
          type: string
        description:
          type: string
        category:
          type: string
        phone_number:
          type: array
          items:
            type: string
          description: ''
        address:
          $ref: '#/components/schemas/AddressRequest'
        payment_configuration:
          $ref: '#/components/schemas/PaymentConfiguration'
        cyclo:
          $ref: '#/components/schemas/Cyclo'
        metadata:
          $ref: '#/components/schemas/Metadata'
        is_provider:
          type: boolean
      example:
        name: teste-teste
        adm_name: testeteste
        adm_email: testetesteteste1222@veripag.com.br
        legal_name: VERIPAG SISTEMAS DE PAGAMENTOS LTDA
        document_type: cnpj
        document_number: 32.367.163/0001-01
        country_code: '76'
        website: 'https://www.veripag.com.br'
        description: Transações Financeiras Inteligentes.
        category: pagamentos
        phone_number:
          - '5511955662211'
        address:
          street1: Av. Queiroz Filho
          street2: ''
          number: '1560'
          complement: Torre Beija Flor 4º andar
          postal_code: '06123456'
          country_code: '76'
          district: Vila Leopoldina
          city: São Paulo
          state: SP
          latitude: -5066
          longitude: 4999
        payment_configuration:
          currencies:
            - BRL
            - USD
          formToken:
            enabled: false
            type: pop-in || pop-up
        cyclo:
          module_code: Cyclo
          domain_name: cyclopay.com.br
          provider_dns: cyclopay.com.br
          backoffice_dns: app.cyclopay.com.br
          customer_portal: true
          styles:
            - name: backoffice
              url_logo_white: '{{$randomAvatarImage}}'
              url_logo_default: '{{$randomAvatarImage}}'
              url_logo_black: '{{$randomAvatarImage}}'
              favicon: '{{$randomAvatarImage}}'
              primary_color: '{{$randomHexColor}}'
              secundary_color: '{{$randomHexColor}}'
              background_color: '{{$randomHexColor}}'
            - name: customer_portal
              url_logo_white: '{{$randomAvatarImage}}'
              url_logo_default: '{{$randomAvatarImage}}'
              url_logo_black: '{{$randomAvatarImage}}'
              favicon: '{{$randomAvatarImage}}'
              primary_color: '{{$randomHexColor}}'
              secundary_color: '{{$randomHexColor}}'
              background_color: '{{$randomHexColor}}'
        metadata:
          termos: '{{$randomPhrase}}'
        is_provider: false
    
    PaymentConfiguration:
      title: PaymentConfiguration
      required:
        - currencies
        - formToken
      type: object
      properties:
        currencies:
          type: array
          items:
            type: string
          description: ''
        formToken:
          $ref: '#/components/schemas/FormToken'
      example:
        currencies:
          - BRL
          - USD
        formToken:
          enabled: false
          type: pop-in || pop-up
    FormToken:
      title: FormToken
      required:
        - enabled
        - type
      type: object
      properties:
        enabled:
          type: boolean
        type:
          type: string
      example:
        enabled: false
        type: pop-in || pop-up
    Cyclo:
      title: Cyclo
      required:
        - module_code
        - domain_name
        - provider_dns
        - backoffice_dns
        - customer_portal
        - styles
      type: object
      properties:
        module_code:
          type: string
        domain_name:
          type: string
        provider_dns:
          type: string
        backoffice_dns:
          type: string
        customer_portal:
          type: boolean
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style'
          description: ''
      example:
        module_code: Cyclo
        domain_name: cyclopay.com.br
        provider_dns: cyclopay.com.br
        backoffice_dns: app.cyclopay.com.br
        customer_portal: true
        styles:
          - name: backoffice
            url_logo_white: '{{$randomAvatarImage}}'
            url_logo_default: '{{$randomAvatarImage}}'
            url_logo_black: '{{$randomAvatarImage}}'
            favicon: '{{$randomAvatarImage}}'
            primary_color: '{{$randomHexColor}}'
            secundary_color: '{{$randomHexColor}}'
            background_color: '{{$randomHexColor}}'
          - name: customer_portal
            url_logo_white: '{{$randomAvatarImage}}'
            url_logo_default: '{{$randomAvatarImage}}'
            url_logo_black: '{{$randomAvatarImage}}'
            favicon: '{{$randomAvatarImage}}'
            primary_color: '{{$randomHexColor}}'
            secundary_color: '{{$randomHexColor}}'
            background_color: '{{$randomHexColor}}'
    Style:
      title: Style
      required:
        - name
        - url_logo_white
        - url_logo_default
        - url_logo_black
        - favicon
        - primary_color
        - secundary_color
        - background_color
      type: object
      properties:
        name:
          type: string
        url_logo_white:
          type: string
        url_logo_default:
          type: string
        url_logo_black:
          type: string
        favicon:
          type: string
        primary_color:
          type: string
        secundary_color:
          type: string
        background_color:
          type: string
      example:
        name: backoffice
        url_logo_white: '{{$randomAvatarImage}}'
        url_logo_default: '{{$randomAvatarImage}}'
        url_logo_black: '{{$randomAvatarImage}}'
        favicon: '{{$randomAvatarImage}}'
        primary_color: '{{$randomHexColor}}'
        secundary_color: '{{$randomHexColor}}'
        background_color: '{{$randomHexColor}}'
    Metadata:
      title: Metadata
      required:
        - termos
      type: object
      properties:
        termos:
          type: string
      example:
        termos: '{{$randomPhrase}}'
    UpdateCompanyRequest:
      title: UpdateCompanyRequest
      required:
        - id
        - provider_id
        - provider
        - code
        - adm_name
        - adm_email
        - name
        - legal_name
        - document_type
        - document_number
        - country_code
        - website
        - description
        - category
        - phones
        - address
        - api
        - payment_configuration
        - cyclo
        - metadata
        - is_provider
        - status
        - create_date
        - update_date
        - phone_number
      type: object
      properties:
        id:
          type: integer
          format: int32
        provider_id:
          type: integer
          format: int32
        provider:
          $ref: '#/components/schemas/Provider'
        code:
          type: string
        adm_name:
          type: string
        adm_email:
          type: string
        name:
          type: string
        legal_name:
          type: string
        document_type:
          type: string
        document_number:
          type: string
        country_code:
          type: string
        website:
          type: string
        description:
          type: string
        category:
          type: string
        phones:
          type: array
          items:
            type: string
          description: ''
        address:
          $ref: '#/components/schemas/Address2'
        api:
          type: string
          nullable: true
        payment_configuration:
          $ref: '#/components/schemas/PaymentConfiguration2'
        cyclo:
          $ref: '#/components/schemas/Cyclo1'
        metadata:
          type: object
        is_provider:
          type: boolean
        status:
          type: string
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
        phone_number:
          type: array
          items:
            type: string
          description: ''
      example:
        id: 124
        provider_id: 1
        provider:
          id: 1
          provider_id: 0
          provider: null
          code: 406ba29d-0344-4b20-91a0-4a9a1e667149
          adm_name: admin@admin.admin
          adm_email: admin@admin.admin
          name: Empresa Veripag12331
          legal_name: VERIPAG SISTEMAS DE PAGAMENTOS LTDA
          document_type: cnpj
          document_number: '29245476000174'
          country_code: BRA
          website: 'https://www.veripag.com.br'
          description: dfgdfgdfgdfg
          category: pagamentos
          phones: []
          address:
            address_code: '1'
            street1: Av. Queiroz Filho
            street2: ''
            number: ''
            district: ''
            city: São Paulo
            state: SP
            postal_code: '06123456'
            additional_info: '1560'
          api: null
          payment_configuration:
            currencies: null
            formtoken_enabled: false
            formtoken_type: pop-up
          cyclo: null
          metadata: null
          is_provider: true
          status: pending
          create_date: '2018-06-06T14:04:50'
          update_date: null
        code: 0097c9ca-02ed-47db-a077-0bb58b876491
        adm_name: admin@admin.admin
        adm_email: admin@admin.admin
        name: Empresa Veripag12331
        legal_name: Empresa VeriPag12331
        document_type: cnpj
        document_number: '19388839000177'
        country_code: BRA
        website: www.google.com
        description: asdasdasd
        category: ''
        phones: []
        address:
          address_code: '124'
          street1: Rua Sabará
          street2: ''
          number: '123'
          district: Higienópolis
          city: São Paulo
          state: SP
          postal_code: 01239-010
          additional_info: ''
          complement: ''
          latitude: 0
          longitude: 0
        api: null
        payment_configuration:
          currencies:
            - BRL
            - USD
          formtoken_enabled: false
          formtoken_type: pop-up
          formToken:
            enabled: false
            type: pop-in
        cyclo:
          module_code: Bill
          domain_name: empresa-veripag12331.veripag.com.br
          provider_dns: ''
          backoffice_dns: ''
          customer_portal: false
          styles: []
        metadata: {}
        is_provider: false
        status: active
        create_date: '2020-04-28T21:32:20.17'
        update_date: null
        phone_number: []
    Provider:
      title: Provider
      required:
        - id
        - provider_id
        - provider
        - code
        - adm_name
        - adm_email
        - name
        - legal_name
        - document_type
        - document_number
        - country_code
        - website
        - description
        - category
        - phones
        - address
        - api
        - payment_configuration
        - cyclo
        - metadata
        - is_provider
        - status
        - create_date
        - update_date
      type: object
      properties:
        id:
          type: integer
          format: int32
        provider_id:
          type: integer
          format: int32
        provider:
          type: string
          nullable: true
        code:
          type: string
        adm_name:
          type: string
        adm_email:
          type: string
        name:
          type: string
        legal_name:
          type: string
        document_type:
          type: string
        document_number:
          type: string
        country_code:
          type: string
        website:
          type: string
        description:
          type: string
        category:
          type: string
        phones:
          type: array
          items:
            type: string
          description: ''
        address:
          $ref: '#/components/schemas/Address1'
        api:
          type: string
          nullable: true
        payment_configuration:
          $ref: '#/components/schemas/PaymentConfiguration1'
        cyclo:
          type: string
          nullable: true
        metadata:
          type: string
          nullable: true
        is_provider:
          type: boolean
        status:
          type: string
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
      example:
        id: 1
        provider_id: 0
        provider: null
        code: 406ba29d-0344-4b20-91a0-4a9a1e667149
        adm_name: admin@admin.admin
        adm_email: admin@admin.admin
        name: Empresa Veripag12331
        legal_name: VERIPAG SISTEMAS DE PAGAMENTOS LTDA
        document_type: cnpj
        document_number: '29245476000174'
        country_code: BRA
        website: 'https://www.veripag.com.br'
        description: dfgdfgdfgdfg
        category: pagamentos
        phones: []
        address:
          address_code: '1'
          street1: Av. Queiroz Filho
          street2: ''
          number: ''
          district: ''
          city: São Paulo
          state: SP
          postal_code: '06123456'
          additional_info: '1560'
        api: null
        payment_configuration:
          currencies: null
          formtoken_enabled: false
          formtoken_type: pop-up
        cyclo: null
        metadata: null
        is_provider: true
        status: pending
        create_date: '2018-06-06T14:04:50'
        update_date: null
    Address1:
      title: Address1
      required:
        - address_code
        - street1
        - street2
        - number
        - district
        - city
        - state
        - postal_code
        - additional_info
      type: object
      properties:
        address_code:
          type: string
        street1:
          type: string
        street2:
          type: string
        number:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        additional_info:
          type: string
      example:
        address_code: '1'
        street1: Av. Queiroz Filho
        street2: ''
        number: ''
        district: ''
        city: São Paulo
        state: SP
        postal_code: '06123456'
        additional_info: '1560'
    PaymentConfiguration1:
      title: PaymentConfiguration1
      required:
        - currencies
        - formtoken_enabled
        - formtoken_type
      type: object
      properties:
        currencies:
          type: string
          nullable: true
        formtoken_enabled:
          type: boolean
        formtoken_type:
          type: string
      example:
        currencies: null
        formtoken_enabled: false
        formtoken_type: pop-up
    Address2:
      title: Address2
      required:
        - address_code
        - street1
        - street2
        - number
        - district
        - city
        - state
        - postal_code
        - additional_info
        - complement
        - latitude
        - longitude
      type: object
      properties:
        address_code:
          type: string
        street1:
          type: string
        street2:
          type: string
        number:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        additional_info:
          type: string
        complement:
          type: string
        latitude:
          type: integer
          format: int32
        longitude:
          type: integer
          format: int32
      example:
        address_code: '124'
        street1: Rua Sabará
        street2: ''
        number: '123'
        district: Higienópolis
        city: São Paulo
        state: SP
        postal_code: 01239-010
        additional_info: ''
        complement: ''
        latitude: 0
        longitude: 0
    PaymentConfiguration2:
      title: PaymentConfiguration2
      required:
        - currencies
        - formtoken_enabled
        - formtoken_type
        - formToken
      type: object
      properties:
        currencies:
          type: array
          items:
            type: string
          description: ''
        formtoken_enabled:
          type: boolean
        formtoken_type:
          type: string
        formToken:
          $ref: '#/components/schemas/FormToken'
      example:
        currencies:
          - BRL
          - USD
        formtoken_enabled: false
        formtoken_type: pop-up
        formToken:
          enabled: false
          type: pop-in
    Cyclo1:
      title: Cyclo1
      required:
        - module_code
        - domain_name
        - provider_dns
        - backoffice_dns
        - customer_portal
        - styles
      type: object
      properties:
        module_code:
          type: string
        domain_name:
          type: string
        provider_dns:
          type: string
        backoffice_dns:
          type: string
        customer_portal:
          type: boolean
        styles:
          type: array
          items:
            type: string
          description: ''
      example:
        module_code: Bill
        domain_name: empresa-veripag12331.veripag.com.br
        provider_dns: ''
        backoffice_dns: ''
        customer_portal: false
        styles: []
    UpdateCompanyAddressRequest:
      title: UpdateCompanyAddressRequest
      required:
        - street1
        - street2
        - number
        - complement
        - postal_code
        - country_code
        - district
        - city
        - state
        - latitude
        - longitude
      type: object
      properties:
        street1:
          type: string
        street2:
          type: string
        number:
          type: string
        complement:
          type: string
        postal_code:
          type: string
        country_code:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        latitude:
          type: integer
          format: int32
        longitude:
          type: integer
          format: int32
      example:
        street1: Av. Queiroz Filho
        street2: ''
        number: '1560'
        complement: Torre Beija Flor 4º andar
        postal_code: '06123456'
        country_code: '76'
        district: Vila Leopoldina
        city: São Paulo
        state: SP
        latitude: -5066
        longitude: 4999
    CreateCompanyStylesRequest:
      title: CreateCompanyStylesRequest
      required:
        - name
        - url_logo_white
        - url_logo_default
        - url_logo_black
        - favicon
        - primary_color
        - secundary_color
        - background_color
      type: object
      properties:
        name:
          type: string
        url_logo_white:
          type: string
        url_logo_default:
          type: string
        url_logo_black:
          type: string
        favicon:
          type: string
        primary_color:
          type: string
        secundary_color:
          type: string
        background_color:
          type: string
      example:
        name: backoffice
        url_logo_white: '{{$randomAvatarImage}}'
        url_logo_default: '{{$randomAvatarImage}}'
        url_logo_black: '{{$randomAvatarImage}}'
        favicon: '{{$randomAvatarImage}}'
        primary_color: '{{$randomHexColor}}'
        secundary_color: '{{$randomHexColor}}'
        background_color: '{{$randomHexColor}}'
    UpdateCompanyStylesRequest:
      title: UpdateCompanyStylesRequest
      required:
        - name
        - url_logo_white
        - url_logo_default
        - url_logo_black
        - favicon
        - primary_color
        - secundary_color
        - background_color
      type: object
      properties:
        name:
          type: string
        url_logo_white:
          type: string
        url_logo_default:
          type: string
        url_logo_black:
          type: string
        favicon:
          type: string
        primary_color:
          type: string
        secundary_color:
          type: string
        background_color:
          type: string
      example:
        name: backoffice
        url_logo_white: '{{$randomAvatarImage}}'
        url_logo_default: '{{$randomAvatarImage}}'
        url_logo_black: '{{$randomAvatarImage}}'
        favicon: '{{$randomAvatarImage}}'
        primary_color: '{{$randomHexColor}}'
        secundary_color: '{{$randomHexColor}}'
        background_color: '{{$randomHexColor}}'
    CreateDunningRuleRequest:
      title: CreateDunningRuleRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: primeiro dunning
        payment_method: credit_card
        email_bcc: lucas.nalon@veripag.com.br
        email_from: lucas.nalon@veripag.com.br
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: false
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: cancel_subscription
            is_final_action: true
    RuleSet:
      title: RuleSet
      required:
        - on_day
        - action_type
        - is_notificated
        - notification_content
        - final_action
        - is_final_action
      type: object
      properties:
        on_day:
          type: integer
          format: int32
        action_type:
          type: string
        is_notificated:
          type: boolean
        notification_content:
          type: string
        final_action:
          type: string
        is_final_action:
          type: boolean
      example:
        on_day: 1
        action_type: ''
        is_notificated: true
        notification_content: ''
        final_action: ''
        is_final_action: false
    RequiredFieldsRequest:
      title: RequiredFieldsRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: ''
        payment_method: ''
        email_bcc: ''
        email_from: ''
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
    InvalidONDAYRequest:
      title: InvalidONDAYRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: ''
        payment_method: ''
        email_bcc: ''
        email_from: ''
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
    InvalidRuleSetsQuantityRequest:
      title: InvalidRuleSetsQuantityRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: teste
        payment_method: credit_card
        email_bcc: ''
        email_from: lucas.nalon@veripag.com.br
        rule_sets:
          - on_day: 1
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
          - on_day: 2
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
          - on_day: 3
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
          - on_day: 16
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: cancel_subscription
            is_final_action: true
    InvalidFinalACTIONRequest:
      title: InvalidFinalACTIONRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: ''
        payment_method: ''
        email_bcc: ''
        email_from: ''
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
    InvalidISFINALACTIONonFirstRuleSetRequest:
      title: InvalidISFINALACTIONonFirstRuleSetRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: ''
        payment_method: ''
        email_bcc: ''
        email_from: ''
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
    InvalidNoneFinalsetRequest:
      title: InvalidNoneFinalsetRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: ''
        payment_method: ''
        email_bcc: ''
        email_from: ''
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
    InvalidMorethanonefinalsetCopyRequest:
      title: InvalidMorethanonefinalsetCopyRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: teste
        payment_method: credit_card
        email_bcc: ''
        email_from: lucas.nalon@veripag.com.br
        rule_sets:
          - on_day: 1
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
          - on_day: 2
            action_type: ''
            is_notificated: true
            notification_content: ''
            final_action: ''
            is_final_action: true
    InvalidNoneRuleSetsRequest:
      title: InvalidNoneRuleSetsRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            type: string
          description: ''
      example:
        name: teste
        payment_method: credit_card
        email_bcc: ''
        email_from: lucas.nalon@veripag.com.br
        rule_sets: []
    UpdateDunningRuleRequest:
      title: UpdateDunningRuleRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: EDITAR-lucas
        payment_method: credit_card
        email_bcc: ''
        email_from: lucas.nalon@veripag.com.br
        rule_sets:
          - on_day: 1
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
          - on_day: 15
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: cancel_subscription
            is_final_action: true
          - on_day: 2
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
    InactiveDunningRuleRequest:
      title: InactiveDunningRuleRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: teste2
        payment_method: credit_card
        email_bcc: ''
        email_from: lucas.nalon@veripag.com.br
        rule_sets:
          - on_day: 1
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
          - on_day: 15
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: cancel_subscription
            is_final_action: true
          - on_day: 2
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
    ActiveDunningRuleRequest:
      title: ActiveDunningRuleRequest
      required:
        - name
        - payment_method
        - email_bcc
        - email_from
        - rule_sets
      type: object
      properties:
        name:
          type: string
        payment_method:
          type: string
        email_bcc:
          type: string
        email_from:
          type: string
        rule_sets:
          type: array
          items:
            $ref: '#/components/schemas/RuleSet'
          description: ''
      example:
        name: teste2
        payment_method: credit_card
        email_bcc: ''
        email_from: lucas.nalon@veripag.com.br
        rule_sets:
          - on_day: 1
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
          - on_day: 15
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: cancel_subscription
            is_final_action: true
          - on_day: 2
            action_type: payment_retry
            is_notificated: true
            notification_content: payment-failed
            final_action: ''
            is_final_action: false
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: lucas.nalon@veripag.com.br
        password: veripag@1234
    ForgotRequest:
      title: ForgotRequest
      required:
        - email
      type: object
      properties:
        email:
          type: string
      example:
        email: lucas.nalon@veripag.com.br
    ResetRequest:
      title: ResetRequest
      required:
        - token
        - password
        - check_password
      type: object
      properties:
        token:
          type: string
        password:
          type: string
        check_password:
          type: string
      example:
        token: 0bvQotGU0a/Rq9Gl0a7RidGk0KLQutCi0LDQs9C20aTRotC30LnQs9Ct0aLRotC20LjQrdC00LTQuNGj0K3RodGm0LbQs9Ct0aHQstC10abRpNC40LDQsNC20abQtdCy0KLQrNCi0ZXRs9Gl0bLRrtGh0a3RpdCi0LrQotGs0bXRo9Gh0bPQrtGu0aHRrNGv0a7RgNG20aXRstGp0bDRodGn0K7Ro9Gv0a3QrtGi0bLQotCs0KLRhdG40bDRqdGy0aHRtNGp0a/RrtGB0bTRlNGp0aPRq9Ci0LrQttCz0LfQsNCw0LLQt9C50LfQstCw0LXQstCx0LfQsNC00LbRvQ==
        password: veripag@1234
        check_password: veripag@1234
    UpdateFilterListRequest:
      title: UpdateFilterListRequest
      required:
        - order
      type: object
      properties:
        order:
          type: array
          items:
            type: string
          description: ''
      example:
        order:
          - customer.first_name
          - customer.last_name
          - amount
          - plan.name
          - total_amount
          - billing_date
          - status
          - create_date
          - invoice_code
    CreateUserRequest:
      title: CreateUserRequest
      required:
        - name
        - last_name
        - email
        - country_code
        - locale
        - timezone
      type: object
      properties:
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
        country_code:
          type: string
        locale:
          type: string
        timezone:
          type: string
      example:
        name: Lucas
        last_name: Nalon
        email: email.test.exampl@cnetmail.net
        country_code: '076'
        locale: pt-br
        timezone: Dateline Standard Time
    EditUserRequest:
      title: EditUserRequest
      required:
        - name
        - last_name
        - email
        - country_code
        - locale
        - timezone
      type: object
      properties:
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
        country_code:
          type: string
        locale:
          type: string
        timezone:
          type: string
      example:
        name: Jerome
        last_name: Pays
        email: jerome.pays@lyra-network.com.br
        country_code: '076'
        locale: pt-br
        timezone: Dateline Standard Time
    CreateAffiliationRequest:
      title: CreateAffiliationRequest
      required:
        - type
        - data
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/Data'
      example:
        type: boleto
        data:
          agency: '2546'
          agency_digit: '1'
          account: '12345'
          account_digit: '7'
          agreement_code: '1234561234'
          bank: '341'
          carteira: '109'
          conv_api_key: chave teste
          conv_api_id: chave teste
          conv_api_secret: chave teste
    Data:
      title: Data
      required:
        - agency
        - agency_digit
        - account
        - account_digit
        - agreement_code
        - bank
        - carteira
        - conv_api_key
        - conv_api_id
        - conv_api_secret
      type: object
      properties:
        agency:
          type: string
        agency_digit:
          type: string
        account:
          type: string
        account_digit:
          type: string
        agreement_code:
          type: string
        bank:
          type: string
        carteira:
          type: string
        conv_api_key:
          type: string
        conv_api_id:
          type: string
        conv_api_secret:
          type: string
      example:
        agency: '2546'
        agency_digit: '1'
        account: '12345'
        account_digit: '7'
        agreement_code: '1234561234'
        bank: '341'
        carteira: '109'
        conv_api_key: chave teste
        conv_api_id: chave teste
        conv_api_secret: chave teste
    IncludeAffiliationCopyRequest:
      title: IncludeAffiliationCopyRequest
      required:
        - affiliation_id
      type: object
      properties:
        affiliation_id:
          type: string
      example:
        affiliation_id: 4e0f5c7f-bb80-ea11-86e9-0003ff3451c6
    CreateShopRequest:
      title: CreateShopRequest
      required:
        - name
        - legal_name
        - soft_descriptor
        - email
        - document
        - address
        - ref_code
      type: object
      properties:
        name:
          type: string
        legal_name:
          type: string
        soft_descriptor:
          type: string
        email:
          type: string
        document:
          $ref: '#/components/schemas/Document'
        address:
          $ref: '#/components/schemas/Address3'
        ref_code:
          type: string
      example:
        name: loja_cpf
        legal_name: loja_cpf
        soft_descriptor: loja_cpf
        email: lojacpf@lojacpf.com
        document:
          type: DNI
          number: 34690678P
        address:
          address_country_code: BRA
          postal_code: 05128000
          street1: Rua Willis Roberto Banks
          number: '549'
          complement: ''
          district: Parque Maria Domitila
          city: São Paulo
          state: SP
          aditional_info: ''
        ref_code: ''
    Address3:
      title: Address3
      required:
        - address_country_code
        - postal_code
        - street1
        - number
        - complement
        - district
        - city
        - state
        - aditional_info
      type: object
      properties:
        address_country_code:
          type: string
        postal_code:
          type: string
        street1:
          type: string
        number:
          type: string
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        aditional_info:
          type: string
      example:
        address_country_code: BRA
        postal_code: 05128000
        street1: Rua Willis Roberto Banks
        number: '549'
        complement: ''
        district: Parque Maria Domitila
        city: São Paulo
        state: SP
        aditional_info: ''
    UpdateShopRequest:
      title: UpdateShopRequest
      required:
        - shop_id
        - ref_code
        - is_main
        - name
        - legal_name
        - description
        - document
        - email
        - soft_descriptor
        - create_date
        - update_date
        - active
        - address
      type: object
      properties:
        shop_id:
          type: string
        ref_code:
          type: string
        is_main:
          type: boolean
        name:
          type: string
        legal_name:
          type: string
        description:
          type: string
        document:
          $ref: '#/components/schemas/Document'
        email:
          type: string
        soft_descriptor:
          type: string
        create_date:
          type: string
        update_date:
          type: string
        active:
          type: boolean
        address:
          $ref: '#/components/schemas/Address4'
      example:
        shop_id: c1296659-34ca-4fc3-aea5-fe4d0bdbc7be
        ref_code: 0524409
        is_main: false
        name: LOJA_XPTO
        legal_name: LOJA_XPTO
        description: ''
        document:
          type: CNPJ
          number: '19100000000000'
        email: loja@xpto.com
        soft_descriptor: SOFT_DESC
        create_date: '2019-04-26T18:20:59Z'
        update_date: '2019-04-30T13:52:03Z'
        active: true
        address:
          address_code: ''
          street1: Rua Willis Roberto Banks
          street2: ''
          number: '549'
          district: Parque Maria Domitila
          city: São Paulo
          state: SP
          address_country_code: BR
          postal_code: 05128000
          additional_info: ''
          complement: ''
    Address4:
      title: Address4
      required:
        - address_code
        - street1
        - street2
        - number
        - district
        - city
        - state
        - address_country_code
        - postal_code
        - additional_info
        - complement
      type: object
      properties:
        address_code:
          type: string
        street1:
          type: string
        street2:
          type: string
        number:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        address_country_code:
          type: string
        postal_code:
          type: string
        additional_info:
          type: string
        complement:
          type: string
      example:
        address_code: ''
        street1: Rua Willis Roberto Banks
        street2: ''
        number: '549'
        district: Parque Maria Domitila
        city: São Paulo
        state: SP
        address_country_code: BR
        postal_code: 05128000
        additional_info: ''
        complement: ''
    InactiveShopRequest:
      title: InactiveShopRequest
      required:
        - code
      type: object
      properties:
        code:
          type: string
      example:
        code: LOJA1
    SetGatewayProfileonShopRequest:
      title: SetGatewayProfileonShopRequest
      required:
        - gateway_profile_ids
      type: object
      properties:
        gateway_profile_ids:
          type: array
          items:
            type: integer
            format: int32
          description: ''
      example:
        gateway_profile_ids:
          - 18
    CreatePlanCheckoutRequest:
      title: CreatePlanCheckoutRequest
      required:
        - checkout_type
      type: object
      properties:
        valid_until:
          type: string
          format: date-time
          nullable: true
          description: Checkout expiration date
        checkout_type:
          type: string
          description: Checkout type - mandatory to be step
        is_time_defined:
          type: boolean
          description: Flag to enable validation hours
        coupon_enabled:
          type: boolean
          description: Flag to enable 
      example:
          valid_until: 2020-09-12T22:33:11
          is_time_defined: false
          coupon_enabled: false
          checkout_type: step
    UpdatePlanCheckoutRequest:
      title: UpdatePlanCheckoutRequest
      required:
        - valid_until
      type: object
      properties:
        valid_until:
          type: string
      example:
        valid_until: '2020-08-07'
    CreatePlanTabRequest:
      title: CreatePlanTabRequest
      required:
        - label
        - checkout_ids
      type: object
      properties:
        label:
          type: string
        checkout_ids:
          type: array
          items:
            type: integer
            format: int32
          description: ''
      example:
        label: Second Tab
        checkout_ids:
          - 3
    EditPlanTabRequest:
      title: EditPlanTabRequest
      required:
        - label
        - plan_ids
      type: object
      properties:
        label:
          type: string
        plan_ids:
          type: array
          items:
            type: integer
            format: int32
          description: ''
      example:
        label: texto aqui
        plan_ids:
          - 1
          - 2
          - 3
    CreatePlanPricingOptionRequest:
      title: CreatePlanPricingOptionRequest
      required:
        - pricing_code
        - currency
        - amount
        - count
        - interval
        - frequency
        - auto_renew
        - trial_amount
        - trial_interval
        - setup_fee
        - trial_unit
        - is_default
        - billing_day
      type: object
      properties:
        pricing_code:
          type: string
        currency:
          type: string
        amount:
          type: integer
          format: int32
        count:
          type: string
        interval:
          type: integer
          format: int32
        frequency:
          type: string
        auto_renew:
          type: boolean
        trial_amount:
          type: integer
          format: int32
        trial_interval:
          type: integer
          format: int32
        setup_fee:
          type: integer
          format: int32
        trial_unit:
          type: string
        is_default:
          type: boolean
        billing_day:
          type: integer
          format: int32
      example:
        pricing_code: TESTE
        currency: BRL
        amount: 11300
        count: '1'
        interval: 1
        frequency: MONTHLY
        auto_renew: false
        trial_amount: 0
        trial_interval: 0
        setup_fee: 0
        trial_unit: ''
        is_default: true
        billing_day: 5
    UpdatePriceOptionRequest:
      title: UpdatePriceOptionRequest
      required:
        - pricing_option_id
        - pricing_code
        - amount
        - currency
        - setup_fee
        - count
        - interval
        - frequency
        - rrule
        - auto_renew
        - trial_amount
        - trial_interval
        - trial_unit
        - is_default
        - status
        - create_method
        - create_date
        - update_date
        - created_by
        - user_id
      type: object
      properties:
        pricing_option_id:
          type: string
        pricing_code:
          type: string
        amount:
          type: integer
          format: int32
        currency:
          type: string
        setup_fee:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        interval:
          type: integer
          format: int32
        frequency:
          type: string
        rrule:
          type: string
        auto_renew:
          type: boolean
        trial_amount:
          type: integer
          format: int32
        trial_interval:
          type: integer
          format: int32
        trial_unit:
          type: string
        is_default:
          type: boolean
        status:
          type: string
        create_method:
          type: string
        create_date:
          type: string
        update_date:
          type: string
        created_by:
          type: string
        user_id:
          type: integer
          format: int32
      example:
        pricing_option_id: 17a100e9-8c1c-41c7-b3d9-b1459986692a
        pricing_code: '5948937'
        amount: 3000
        currency: BRL
        setup_fee: 0
        count: 12
        interval: 1
        frequency: MONTHLY
        rrule: FREQ=MONTHLY;COUNT=12;INTERVAL=1
        auto_renew: true
        trial_amount: 1000
        trial_interval: 0
        trial_unit: MONTHLY
        is_default: false
        status: active
        create_method: BACKOFFICE
        create_date: '2020-01-06T20:11:21.337'
        update_date: '2020-01-06T20:12:02.117'
        created_by: lucas nalon
        user_id: 99
    SetDefaultRequest:
      title: SetDefaultRequest
      required:
        - is_default
      type: object
      properties:
        is_default:
          type: boolean
      example:
        is_default: true
    
    RecurrenceRule:
      title: RecurrenceRule
      required:
        - interval
        - frequency
        - auto_renew
      type: object
      properties:
        interval:
          type: string
        frequency:
          type: string
        auto_renew:
          type: string
      example:
        interval: '1'
        frequency: DAILY
        auto_renew: 'false'
    PaymentDefinitions:
      title: PaymentDefinitions
      required:
        - payment_methods
        - amount
        - currency
      type: object
      properties:
        payment_methods:
          type: array
          items:
            type: string
          description: ''
        amount:
          type: integer
          format: int32
        currency:
          type: string
      example:
        payment_methods:
          - credit_card
        amount: 300
        currency: BRL
    TrialPeriod:
      title: TrialPeriod
      required:
        - interval
        - amount
        - interval_unit
      type: object
      properties:
        interval:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        interval_unit:
          type: string
      example:
        interval: 1
        amount: 800
        interval_unit: MONTHLY
    SendPlanMessageRequest:
      title: SendPlanMessageRequest
      required:
        - message
        - subject
        - title
      type: object
      properties:
        message:
          type: string
        subject:
          type: string
        title:
          type: string
      example:
        message: aqui é um tituloaqui é um tituloaqui é um tituloaqui é um tituloaqui é um tituloaqui é um tituloaqui é um tituloaqui é um tituloaqui é um tituloaqui é um titulo
        subject: TESTE
        title: aqui é um titulo
    CreateCustomerCardRequest:
      title: CreateCustomerCardRequest
      required:
        - brand
        - number
        - holder
        - cvv
        - expiry_date
        - type
      type: object
      properties:
        brand:
          type: string
        number:
          type: string
        holder:
          type: string
        cvv:
          type: string
        expiry_date:
          type: string
        type:
          type: string
      example:
        brand: visa
        number: '4970100000000055'
        holder: VINICIUS A FONSECA
        cvv: '122'
        expiry_date: 12/2020
        type: credit_card
    SendSubscribeLinkRequest:
      title: SendSubscribeLinkRequest
      required:
        - plan_id
      type: object
      properties:
        plan_id:
          type: integer
          format: int32
      example:
        plan_id: 1065
    
    BillingAddress:
      title: BillingAddress
      required:
        - address_country_code
        - postal_code
        - street1
        - district
        - city
        - state
        - number
      type: object
      properties:
        address_country_code:
          type: string
        postal_code:
          type: string
        street1:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        number:
          type: string
      example:
        address_country_code: PER
        postal_code: 05128000
        street1: Rua Willis Roberto Banks
        district: Parque Maria Domitila
        city: São Paulo
        state: SP
        number: '549'
    ShippingAddress:
      title: ShippingAddress
      required:
        - address_country_code
        - postal_code
        - street1
        - district
        - city
        - state
        - number
        - is_main
      type: object
      properties:
        address_country_code:
          type: string
        postal_code:
          type: string
        street1:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        number:
          type: string
        is_main:
          type: string
      example:
        address_country_code: PER
        postal_code: 05128000
        street1: Rua Willis Roberto Banks
        district: Parque Maria Domitila
        city: São Paulo
        state: SP
        number: '549'
        is_main: 'true'
    CreateCustomer:
      title: CreateCustomer
      required:
        - customer_id
        - email
        - phone
        - name
        - birth
        - gender
        - document
        - address
        - create_date
        - active
      type: object
      properties:
        customer_id:
          type: string
        email:
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        name:
          type: string
        birth:
          type: string
        gender:
          type: string
        document:
          $ref: '#/components/schemas/Document'
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address5'
          description: ''
        create_date:
          type: string
        active:
          type: boolean
      example:
        customer_id: 9ec9b985-19d5-42e4-bdbe-5db3a53da956
        email: fulano@veripag.com.br
        phone:
          phone_number: '11988822222'
        name: Fulano
        birth: '1994-03-22T00:00:00Z'
        gender: M
        document:
          type: CPF
          number: '38249711009'
        address:
          - street: Rua Teste
            number: 112
            neighborhood: Vila Teste
            city: Sao Paulo
            state: SP
            address_country_code: BRA
            postal_code: 05319000
            complement: apto 444
            address_code: ff717188-94f9-430b-91d7-81c596a59062
        create_date: '2018-03-14T18:50:45.2934882Z'
        active: true
    
    Address5:
      title: Address5
      required:
        - street
        - number
        - neighborhood
        - city
        - state
        - address_country_code
        - postal_code
        - complement
        - address_code
      type: object
      properties:
        street:
          type: string
        number:
          type: integer
          format: int32
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        address_country_code:
          type: string
        postal_code:
          type: string
        complement:
          type: string
        address_code:
          type: string
      example:
        street: Rua Teste
        number: 112
        neighborhood: Vila Teste
        city: Sao Paulo
        state: SP
        address_country_code: BRA
        postal_code: 05319000
        complement: apto 444
        address_code: ff717188-94f9-430b-91d7-81c596a59062
    UpdateCustomerRequest:
      title: UpdateCustomerRequest
      required:
        - customer_id
        - ref_code
        - email
        - cc_emails
        - first_name
        - last_name
        - birth
        - gender
        - description
        - mobile_number
        - phones
        - document
        - tax_exempt
        - vat_number
        - country_code
        - cancel_date
        - create_date
        - update_date
        - active
        - shipping_address
        - billing_address
      type: object
      properties:
        customer_id:
          type: string
        ref_code:
          type: string
          nullable: true
        email:
          type: string
        cc_emails:
          type: array
          items:
            type: string
          description: ''
        first_name:
          type: string
        last_name:
          type: string
        birth:
          type: string
        gender:
          type: string
        description:
          type: string
        mobile_number:
          type: string
        phones:
          type: array
          items:
            type: string
          description: ''
        document:
          $ref: '#/components/schemas/Document'
        tax_exempt:
          type: boolean
        vat_number:
          type: string
        country_code:
          type: string
        cancel_date:
          type: string
          nullable: true
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
        active:
          type: boolean
        shipping_address:
          type: array
          items:
            $ref: '#/components/schemas/ShippingAddress1'
          description: ''
        billing_address:
          $ref: '#/components/schemas/BillingAddress1'
      example:
        customer_id: d234514e-9ac2-49bb-8e87-9211ff709d9e
        ref_code: null
        email: elmai@email.com
        cc_emails: []
        first_name: guilherme
        last_name: cardoso
        birth: ''
        gender: ''
        description: ''
        mobile_number: +55 (11) 9 4949-494
        phones: []
        document:
          type: CPF
          number: 012.345.678-90
        tax_exempt: false
        vat_number: ''
        country_code: BRA
        cancel_date: null
        create_date: '2020-03-16T15:33:51Z'
        update_date: null
        active: true
        shipping_address:
          - address_country_code: BRA
            is_main: false
            postal_code: 04890-575
            street1: Rua Barão de Hermida
            number: '21'
            complement: ''
            district: Jardim Santa Fé (Zona Sul)
            city: São Paulo
            state: SP
          - address_country_code: BRA
            is_main: true
            postal_code: 04890-575
            street1: Rua Barão de Hermida
            number: '21'
            complement: ''
            district: Jardim Santa Fé (Zona Sul)
            city: São Paulo
            state: SP
        billing_address:
          address_country_code: BRA
          postal_code: 04890-575
          street1: RUA BARAO DE HERMIDA
          number: '21'
          complement: 'RUA BARAO DE HERMIDA, 21'
          district: Jardim Santa Fé (Zona Sul)
          city: SAO PAULO
          state: São Paulo
          aditional_info: ''
    ShippingAddress1:
      title: ShippingAddress1
      required:
        - address_country_code
        - is_main
        - postal_code
        - street1
        - number
        - complement
        - district
        - city
        - state
      type: object
      properties:
        address_country_code:
          type: string
        is_main:
          type: boolean
        postal_code:
          type: string
        street1:
          type: string
        number:
          type: string
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
      example:
        address_country_code: BRA
        is_main: false
        postal_code: 04890-575
        street1: Rua Barão de Hermida
        number: '21'
        complement: ''
        district: Jardim Santa Fé (Zona Sul)
        city: São Paulo
        state: SP
    BillingAddress1:
      title: BillingAddress1
      required:
        - address_country_code
        - postal_code
        - street1
        - number
        - complement
        - district
        - city
        - state
        - aditional_info
      type: object
      properties:
        address_country_code:
          type: string
        postal_code:
          type: string
        street1:
          type: string
        number:
          type: string
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        aditional_info:
          type: string
      example:
        address_country_code: BRA
        postal_code: 04890-575
        street1: RUA BARAO DE HERMIDA
        number: '21'
        complement: 'RUA BARAO DE HERMIDA, 21'
        district: Jardim Santa Fé (Zona Sul)
        city: SAO PAULO
        state: São Paulo
        aditional_info: ''
    UpdatePaymentMeanFormRequest:
      title: UpdatePaymentMeanFormRequest
      required:
        - payment_mean_id
        - payment_mean
      type: object
      properties:
        payment_mean_id:
          type: integer
          format: int32
        payment_mean:
          $ref: '#/components/schemas/PaymentMean'
      example:
        payment_mean_id: 123
        payment_mean:
          brand: aa
          number: '4970100000000014'
          holder: PRIMEIRO CLIENTE
          cvv: '554'
          expiry_date: 12/2022
          type: credit_card
    PaymentMean:
      title: PaymentMean
      required:
        - brand
        - number
        - holder
        - cvv
        - expiry_date
        - type
      type: object
      properties:
        brand:
          type: string
        number:
          type: string
        holder:
          type: string
        cvv:
          type: string
        expiry_date:
          type: string
        type:
          type: string
      example:
        brand: aa
        number: '4970100000000014'
        holder: PRIMEIRO CLIENTE
        cvv: '554'
        expiry_date: 12/2022
        type: credit_card
    GetSpecificSubscription:
      title: GetSpecificSubscription
      required:
        - subscription_id
        - subscription_code
        - plan
        - customer
        - shop
        - notification
        - type
        - create_date
        - update_date
        - active
        - invoices
      type: object
      properties:
        subscription_id:
          type: integer
          format: int32
        subscription_code:
          type: string
        plan:
          $ref: '#/components/schemas/PlansResponse'
        customer:
          $ref: '#/components/schemas/CustomerResponse'
        shop:
          $ref: '#/components/schemas/Shop'
        notification:
          $ref: '#/components/schemas/Notification'
        type:
          type: string
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
        active:
          type: boolean
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
          description: ''
      example:
        subscription_id: 5
        subscription_code: 6461FHQI38
        plan:
          name: PLANO 01 diary
          soft_descriptor: testetesteteste
          description: Plano cobrado diariamente
          payment_definitions:
            amount: 9900
            installments: 1
            charge_settings:
              billing_day: '4'
              due_day: '15'
            setup_fee: 0
            cancelation_fee: 0
          trial_days: 0
          enable_off_date: false
          generation_date: '8'
          shop_code: A3Q9L2AEDX
          create_date: '2018-09-04T20:33:07.8'
          update_date: null
          active: false
        customer:
          customer_id: 3d505be0-31bf-4b7d-83b1-08469cf041f4
          email: lucas.nalon@veripag.com.br
          phone:
            number: '951578656'
            phone_prefix: ''
            dial_prefix: ''
          first_name: Lucas
          last_name: Nalon
          birth: '2000-04-26T00:00:00Z'
          document:
            type: CPF
            number: '35679236842'
          create_date: '2018-09-04T20:46:08.89'
          update_date: null
          active: true
        shop:
          name: VERIPAG SHOP
          tax_id: 80.309.970/0001-02
          email: example@veripag.com.br
          reference_code: Y6KL5R3DCL
          create_date: '2018-09-04T20:54:45.387'
          update_date: null
        notification:
          sms: true
          email: false
        type: service
        create_date: '2018-09-04T21:36:19.24'
        update_date: null
        active: true
        invoices:
          - invoice_code: 77HEKMPP6L
            status: PENDENTE
            billing_date: '2018-10-04T00:00:00'
            create_date: '2018-09-04T21:36:28.173'
            update_date: null
          - invoice_code: TQGJ15A7SQ
            status: PENDENTE
            billing_date: '2018-11-04T00:00:00'
            create_date: '2018-09-04T21:36:28.18'
            update_date: null
          - invoice_code: 1XLRTR7M8C
            status: PENDENTE
            billing_date: '2018-12-04T00:00:00'
            create_date: '2018-09-04T21:36:28.183'
            update_date: null
          - invoice_code: K3TX4X9M0W
            status: PENDENTE
            billing_date: '2019-01-04T00:00:00'
            create_date: '2018-09-04T21:36:28.187'
            update_date: null
          - invoice_code: UVTZFNBBQC
            status: PENDENTE
            billing_date: '2019-02-04T00:00:00'
            create_date: '2018-09-04T21:36:28.193'
            update_date: null
          - invoice_code: J6BFR0OHQS
            status: PENDENTE
            billing_date: '2019-03-04T00:00:00'
            create_date: '2018-09-04T21:36:28.197'
            update_date: null
          - invoice_code: 9ZCY7BU9GN
            status: PENDENTE
            billing_date: '2019-04-04T00:00:00'
            create_date: '2018-09-04T21:36:28.197'
            update_date: null
          - invoice_code: MWVB14BQJZ
            status: PENDENTE
            billing_date: '2019-05-04T00:00:00'
            create_date: '2018-09-04T21:36:28.197'
            update_date: null
          - invoice_code: WZTG63RX71
            status: PENDENTE
            billing_date: '2019-06-04T00:00:00'
            create_date: '2018-09-04T21:36:28.2'
            update_date: null
          - invoice_code: 7I6C0IW5DB
            status: PENDENTE
            billing_date: '2019-07-04T00:00:00'
            create_date: '2018-09-04T21:36:28.2'
            update_date: null
          - invoice_code: 6H66IQHZU1
            status: PENDENTE
            billing_date: '2019-08-04T00:00:00'
            create_date: '2018-09-04T21:36:28.203'
            update_date: null
          - invoice_code: F7YY9WZW2Q
            status: PENDENTE
            billing_date: '2019-09-04T00:00:00'
            create_date: '2018-09-04T21:36:28.203'
            update_date: null
          - invoice_code: JTLXXWJHPZ
            status: PENDENTE
            billing_date: '2019-10-04T00:00:00'
            create_date: '2018-09-04T21:36:28.203'
            update_date: null
          - invoice_code: E7TP8E1JPI
            status: PENDENTE
            billing_date: '2019-11-04T00:00:00'
            create_date: '2018-09-04T21:36:28.207'
            update_date: null
          - invoice_code: L4BD3KFHL9
            status: PENDENTE
            billing_date: '2019-12-04T00:00:00'
            create_date: '2018-09-04T21:36:28.207'
            update_date: null
          - invoice_code: HEHLK2HIK3
            status: PENDENTE
            billing_date: '2020-01-04T00:00:00'
            create_date: '2018-09-04T21:36:28.217'
            update_date: null
          - invoice_code: 561LEK73Z6
            status: PENDENTE
            billing_date: '2020-02-04T00:00:00'
            create_date: '2018-09-04T21:36:28.22'
            update_date: null
          - invoice_code: D65VJBG9BR
            status: PENDENTE
            billing_date: '2020-03-04T00:00:00'
            create_date: '2018-09-04T21:36:28.223'
            update_date: null
          - invoice_code: WC0DWFJVMK
            status: PENDENTE
            billing_date: '2020-04-04T00:00:00'
            create_date: '2018-09-04T21:36:28.223'
            update_date: null
          - invoice_code: YZXJGGPK4N
            status: PENDENTE
            billing_date: '2020-05-04T00:00:00'
            create_date: '2018-09-04T21:36:28.227'
            update_date: null
          - invoice_code: 80Z7MOKKQN
            status: PENDENTE
            billing_date: '2020-06-04T00:00:00'
            create_date: '2018-09-04T21:36:28.227'
            update_date: null
          - invoice_code: 2BLKPOC9BW
            status: PENDENTE
            billing_date: '2020-07-04T00:00:00'
            create_date: '2018-09-04T21:36:28.23'
            update_date: null
          - invoice_code: 24H8WUVDOZ
            status: PENDENTE
            billing_date: '2020-08-04T00:00:00'
            create_date: '2018-09-04T21:36:28.23'
            update_date: null
          - invoice_code: 35OYBNIE14
            status: PENDENTE
            billing_date: '2020-09-04T00:00:00'
            create_date: '2018-09-04T21:36:28.23'
            update_date: null
    
    
    PaymentDefinitions1:
      title: PaymentDefinitions1
      required:
        - amount
        - installments
        - charge_settings
        - setup_fee
        - cancelation_fee
      type: object
      properties:
        amount:
          type: integer
          format: int32
        installments:
          type: integer
          format: int32
        charge_settings:
          $ref: '#/components/schemas/ChargeSettings'
        setup_fee:
          type: integer
          format: int32
        cancelation_fee:
          type: integer
          format: int32
      example:
        amount: 9900
        installments: 1
        charge_settings:
          billing_day: '4'
          due_day: '15'
        setup_fee: 0
        cancelation_fee: 0
    ChargeSettings:
      title: ChargeSettings
      required:
        - billing_day
        - due_day
      type: object
      properties:
        billing_day:
          type: string
        due_day:
          type: string
      example:
        billing_day: '4'
        due_day: '15'
    Customer:
      title: Customer
      required:
        - customer_id
        - email
        - phone
        - first_name
        - last_name
        - birth
        - document
        - create_date
        - update_date
        - active
      type: object
      properties:
        customer_id:
          type: string
        email:
          type: string
        phone:
          $ref: '#/components/schemas/Phone1'
        first_name:
          type: string
        last_name:
          type: string
        birth:
          type: string
        document:
          $ref: '#/components/schemas/Document'
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
        active:
          type: boolean
      example:
        customer_id: 3d505be0-31bf-4b7d-83b1-08469cf041f4
        email: lucas.nalon@veripag.com.br
        phone:
          number: '951578656'
          phone_prefix: ''
          dial_prefix: ''
        first_name: Lucas
        last_name: Nalon
        birth: '2000-04-26T00:00:00Z'
        document:
          type: CPF
          number: '35679236842'
        create_date: '2018-09-04T20:46:08.89'
        update_date: null
        active: true
    Phone1:
      title: Phone1
      required:
        - number
        - phone_prefix
        - dial_prefix
      type: object
      properties:
        number:
          type: string
        phone_prefix:
          type: string
        dial_prefix:
          type: string
      example:
        number: '951578656'
        phone_prefix: ''
        dial_prefix: ''
    Shop:
      title: Shop
      required:
        - name
        - tax_id
        - email
        - reference_code
        - create_date
        - update_date
      type: object
      properties:
        name:
          type: string
        tax_id:
          type: string
        email:
          type: string
        reference_code:
          type: string
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
      example:
        name: VERIPAG SHOP
        tax_id: 80.309.970/0001-02
        email: example@veripag.com.br
        reference_code: Y6KL5R3DCL
        create_date: '2018-09-04T20:54:45.387'
        update_date: null
    Notification:
      title: Notification
      required:
        - sms
        - email
      type: object
      properties:
        sms:
          type: boolean
        email:
          type: boolean
      example:
        sms: true
        email: false
    Invoice:
      title: Invoice
      required:
        - invoice_code
        - status
        - billing_date
        - create_date
        - update_date
      type: object
      properties:
        invoice_code:
          type: string
        status:
          type: string
        billing_date:
          type: string
        create_date:
          type: string
        update_date:
          type: string
          nullable: true
      example:
        invoice_code: 77HEKMPP6L
        status: PENDENTE
        billing_date: '2018-10-04T00:00:00'
        create_date: '2018-09-04T21:36:28.173'
        update_date: null
    CreateSubsctiptionRequest:
      title: CreateSubsctiptionRequest
      required:
        - customer_id
        - payment_mean_id
        - plan_id
        - pricing_option_id
        - initial_charge_date
        - shop_id
        - enable_suspension
        - enable_user_cancelation
        - auto_renew
      type: object
      properties:
        customer_id:
          type: string
        payment_mean_id:
          type: integer
          format: int32
        plan_id:
          type: integer
          format: int32
        pricing_option_id:
          type: string
        initial_charge_date:
          type: string
          nullable: true
        shop_id:
          type: string
        enable_suspension:
          type: boolean
        enable_user_cancelation:
          type: boolean
        auto_renew:
          type: boolean
      example:
        customer_id: 7ddd9873-b8bc-4bf8-b771-9a5e2ddf14af
        payment_mean_id: 539
        plan_id: 1602
        pricing_option_id: 310af377-7641-4c0e-85fd-bc316b606330
        initial_charge_date: null
        shop_id: c675048c-fea7-41cc-97da-e71c1eadb69e
        enable_suspension: false
        enable_user_cancelation: true
        auto_renew: false
    ChangeSubscriptionStatusRequest:
      title: ChangeSubscriptionStatusRequest
      required:
        - status
      type: object
      properties:
        status:
          type: string
      example:
        status: active
    NovoCreateSubsRequest:
      title: NovoCreateSubsRequest
      required:
        - plan_code
        - customer_id
        - customer
        - card_id
        - card
        - shop_code
        - shop_id
        - inital_charge_date
      type: object
      properties:
        plan_code:
          type: string
        customer_id:
          type: string
        customer:
          type: string
        card_id:
          type: string
        card:
          $ref: '#/components/schemas/Card'
        shop_code:
          type: string
        shop_id:
          type: string
        inital_charge_date:
          type: string
      example:
        plan_code: DAILYPLAN001
        customer_id: 59dbe7d5-ba5f-47cb-8d28-99ffc0222488
        customer: ''
        card_id: 7680693e-0e51-47db-a4f9-3e8a17f00c9d
        card:
          number: ''
          cvv: ''
          card_holder: ''
          expiry: ''
        shop_code: ''
        shop_id: ''
        inital_charge_date: '2018-09-12'
    Card:
      title: Card
      required:
        - number
        - cvv
        - card_holder
        - expiry
      type: object
      properties:
        number:
          type: string
        cvv:
          type: string
        card_holder:
          type: string
        expiry:
          type: string
      example:
        number: ''
        cvv: ''
        card_holder: ''
        expiry: ''
    UpdatePaymentMeanRequest:
      title: UpdatePaymentMeanRequest
      required:
        - payment_mean_id
      type: object
      properties:
        payment_mean_id:
          type: string
      example:
        payment_mean_id: DAILYPLAN001
    CreateProductRequest:
      title: CreateProductRequest
      required:
        - soft_descriptor
        - description
        - name
        - amount
        - units
        - currency_code
      type: object
      properties:
        soft_descriptor:
          type: string
        description:
          type: string
        name:
          type: string
        amount:
          type: integer
          format: int32
        units:
          type: string
        currency_code:
          type: string
      example:
        soft_descriptor: produto-um
        description: decrição do primeiro produto
        name: PROD2
        amount: 100
        units: TIME
        currency_code: BRL
    UpdateProductRequest:
      title: UpdateProductRequest
      required:
        - reference_code
        - soft_descriptor
        - description
        - name
        - amount
        - units
        - currency_code
      type: object
      properties:
        reference_code:
          type: string
        soft_descriptor:
          type: string
        description:
          type: string
        name:
          type: string
        amount:
          type: string
        units:
          type: string
        currency_code:
          type: string
      example:
        reference_code: PRODUCT02
        soft_descriptor: PRODUTO
        description: PRODUTO COMERCIALIZADO
        name: PRODUTO02
        amount: '1000'
        units: TIME
        currency_code: BRL
    CreateCouponRequest:
      title: CreateCouponRequest
      required:
        - name
        - ref_code
        - description
        - percentage
        - amount
        - count
        - expire_date
        - plan_id
        - currency
      type: object
      properties:
        name:
          type: string
        ref_code:
          type: string
        description:
          type: string
        percentage:
          type: number
        amount:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        expire_date:
          type: string
        plan_id:
          type: integer
          format: int32
        currency:
          type: string
      example:
        name: Cupom ABC
        ref_code: cupom_abc
        description: cupom teste para teste
        percentage: 12.2
        amount: 11
        count: 100
        expire_date: '2019-04-10'
        plan_id: 1040
        currency: BRL
    EditCouponRequest:
      title: EditCouponRequest
      required:
        - plan_restrictions
      type: object
      properties:
        plan_restrictions:
          type: string
          nullable: true
      example:
        plan_restrictions: null
    InactiveCouponRequest:
      title: InactiveCouponRequest
      required:
        - reason
      type: object
      properties:
        reason:
          type: string
      example:
        reason: Motivo para o cancelamento
    AddmissingtransactionsRequest:
      title: AddmissingtransactionsRequest
      required:
        - code
        - uuid
      type: object
      properties:
        code:
          type: string
        uuid:
          type: string
      example:
        code: O65D4PZYOU
        uuid: f385a92d6e704bbb971468044def64b8
    RefundInvoiceRequest:
      title: RefundInvoiceRequest
      required:
        - amount
      type: object
      properties:
        amount:
          type: integer
          format: int32
      example:
        amount: 8800
    CreateSaleRequest:
      title: CreateSaleRequest
      required:
        - customer_id
        - amount
        - currency
        - description
        - payment_mean_id
      type: object
      properties:
        customer_id:
          type: string
        amount:
          type: integer
          format: int32
        currency:
          type: string
        description:
          type: string
        payment_mean_id:
          type: integer
          format: int32
      example:
        customer_id: 36a821fa-bf11-410d-b426-2bc0b10e4615
        amount: 2990
        currency: BRL
        description: teste de venda
        payment_mean_id: 147
    RefundSaleRequest:
      title: RefundSaleRequest
      required:
        - amount
        - mode
      type: object
      properties:
        amount:
          type: integer
          format: int32
        mode:
          type: string
      example:
        amount: 1000
        mode: REFUND
    CancelSaleRequest:
      title: CancelSaleRequest
      required:
        - mode
      type: object
      properties:
        mode:
          type: string
      example:
        mode: CANCELLATION
    CreateGatewayProfilesRequest:
      title: CreateGatewayProfilesRequest
      required:
        - name
        - payment_shop_id
        - module_id
        - prod_key
        - sandbox_key
        - test_card_id
        - sandbox_api_key
        - sandbox_public_key
        - prod_api_key
        - prod_public_key
      type: object
      properties:
        name:
          type: string
        payment_shop_id:
          type: string
        module_id:
          type: integer
          format: int32
        prod_key:
          type: string
        sandbox_key:
          type: string
        test_card_id:
          type: integer
          format: int32
        sandbox_api_key:
          type: string
        sandbox_public_key:
          type: string
        prod_api_key:
          type: string
        prod_public_key:
          type: string
      example:
        name: MitTestGateway
        payment_shop_id: '87085936'
        module_id: 1
        prod_key: '7281472615260690'
        sandbox_key: '1950398500482465'
        test_card_id: 2
        sandbox_api_key: ''
        sandbox_public_key: ''
        prod_api_key: ''
        prod_public_key: ''
    SetCheckoutFieldsRequest:
      title: SetCheckoutFieldsRequest
      required:
        - checkout_config
      type: object
      properties:
        checkout_config:
          $ref: '#/components/schemas/CheckoutConfig'
      example:
        checkout_config:
          billing_address: true
          country_code: false
          document: false
          email: true
          first_name: true
          last_name: true
          mobile_number: true
          shipping_address: false
    CheckoutConfig:
      title: CheckoutConfig
      required:
        - billing_address
        - country_code
        - document
        - email
        - first_name
        - last_name
        - mobile_number
        - shipping_address
      type: object
      properties:
        billing_address:
          type: boolean
        country_code:
          type: boolean
        document:
          type: boolean
        email:
          type: boolean
        first_name:
          type: boolean
        last_name:
          type: boolean
        mobile_number:
          type: boolean
        shipping_address:
          type: boolean
      example:
        billing_address: true
        country_code: false
        document: false
        email: true
        first_name: true
        last_name: true
        mobile_number: true
        shipping_address: false
    RegisterRequest:
      title: RegisterRequest
      required:
        - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer1'
      example:
        customer:
          first_name: lucas
          last_name: nalon
          email: lucas.nalon@veripag.com.br
          mobile_number: +55 (11) 998798798
          country_code: BRA
          billing_address:
            postal_code: 06192-010
            street1: Avenida Comandante Sampaio
            number: '123'
            state: SP
            district: km 18
            city: Osasco
            country: ''
            complement: ''
    Customer1:
      title: Customer1
      required:
        - first_name
        - last_name
        - email
        - mobile_number
        - country_code
        - billing_address
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        mobile_number:
          type: string
        country_code:
          type: string
        billing_address:
          $ref: '#/components/schemas/BillingAddress2'
      example:
        first_name: lucas
        last_name: nalon
        email: lucas.nalon@veripag.com.br
        mobile_number: +55 (11) 998798798
        country_code: BRA
        billing_address:
          postal_code: 06192-010
          street1: Avenida Comandante Sampaio
          number: '123'
          state: SP
          district: km 18
          city: Osasco
          country: ''
          complement: ''
    BillingAddress2:
      title: BillingAddress2
      required:
        - postal_code
        - street1
        - number
        - state
        - district
        - city
        - country
        - complement
      type: object
      properties:
        postal_code:
          type: string
        street1:
          type: string
        number:
          type: string
        state:
          type: string
        district:
          type: string
        city:
          type: string
        country:
          type: string
        complement:
          type: string
      example:
        postal_code: 06192-010
        street1: Avenida Comandante Sampaio
        number: '123'
        state: SP
        district: km 18
        city: Osasco
        country: ''
        complement: ''
    PaymentRequest:
      title: PaymentRequest
      required:
        - payment_mean
        - customer
        - subscription_id
      type: object
      properties:
        payment_mean:
          $ref: '#/components/schemas/PaymentMean'
        customer:
          $ref: '#/components/schemas/Customer2'
        subscription_id:
          type: integer
          format: int32
      example:
        payment_mean:
          number: ASDASDASDASDASDA
          holder: THIERRY COSTE
          expiry_date: 09/2020
          cvv: '111'
          brand: mastercard
          type: credit_card
        customer:
          customer_id: 7ddd9873-b8bc-4bf8-b771-9a5e2ddf14af
        subscription_id: 2470
    Customer2:
      title: Customer2
      required:
        - customer_id
      type: object
      properties:
        customer_id:
          type: string
      example:
        customer_id: 7ddd9873-b8bc-4bf8-b771-9a5e2ddf14af
    PaymentBoletoRequest:
      title: PaymentBoletoRequest
      required:
        - payment_mean
        - customer
        - subscription_id
      type: object
      properties:
        payment_mean:
          $ref: '#/components/schemas/PaymentMean2'
        customer:
          $ref: '#/components/schemas/Customer2'
        subscription_id:
          type: integer
          format: int32
      example:
        payment_mean:
          type: boleto
        customer:
          customer_id: 7ddd9873-b8bc-4bf8-b771-9a5e2ddf14af
        subscription_id: 2132
    PaymentMean2:
      title: PaymentMean2
      required:
        - type
      type: object
      properties:
        type:
          type: string
      example:
        type: boleto
    UpdatePaymentMeanRequest1:
      title: UpdatePaymentMeanRequest1
      required:
        - customer_id
        - subscription_id
        - payment_mean
      type: object
      properties:
        customer_id:
          type: string
        subscription_id:
          type: integer
          format: int32
        payment_mean:
          $ref: '#/components/schemas/PaymentMean'
      example:
        customer_id: aa884ce8-70e4-4bca-a600-993c2ac0c35d
        subscription_id: 2166
        payment_mean:
          type: credit_card
          number: '4970100000000014'
          expiry_date: 12/2020
          cvv: '222'
          holder: lucas nalon
          brand: visa
tags:
  - name: Admin
  - name: Sales Dunnings
  - name: Dunning
  - name: Auth
  - name: Configurations
  - name: User
  - name: Affiliations
  - name: Affiliation
  - name: Shop
  - name: Plan Checkout
  - name: Tabs
  - name: Preços
  - name: Planos
  - name: Cards
  - name: Checkout
    description: '
      In this section it is shown how to create and manage the Checkout functionalities, being them the plan checkout management, subscription links, and checkout page.
    

      ** Plan checkout management **: Allows you to enable and configure the plan checkout page.


      **Subscription Link**:Specific checkout for a determinated subscriber.


      **Checkout**: Data visualization for the page and sign request.


      When generating a checkout page or subscription link, it is possible to use the returned url to access the checkout page with the subscriber data already filled in, requiring only the payment method data to be filled.
      '
  - name: Plan - checkout page
    description: '
            Starting we have to enable the checkout page of a determinated plan, the prerequisites for creating and configuring a checkout page are:
          
          - Plan selected to be existing
          - Plan to be in ** ACTIVE ** checkout page are:
          
          These pages may have validity, when this information is available, the page will be available until the expiration date.
                  
          > ### Expired page link
          
          > When the plan checkout page has expired, you can renew the expiration date by updating the "valid_until" field to a new date, or if you want to indicate that this page will always be available by updating this field above without informing the date.
       '
  - name: customers - Checkout page
    description: '
        Subscription links for subscribers already registered on the platform. The links arSubscription links for subscribers already registered on the platform. The links are similar to those generated by the * Checkout Page * functionality.e similar to those generated by the * Checkout Page * functionality.

        
        The prerequisites for using this functionality are:
         
        - Have registered subscribers
        - Have a registered plan

        Unlike the checkout page, the links have some characteristics and diferences, they are:

        - The links have a expiration date
        
        > 🚧 The default validity of the links is 24 hours after their creation date.

        - The lins are unique
        
        > 🚧 Subscription links cannot be used more than once.

        - Selected plan needs to have checkout
        
        > 🚧 To create the links, the selected Plan must have its Checkout page enabled.
      '
  - name: subscribers
  - name: Public routes
  - name: Report
  - name: Subscriptions
  - name: Product
  - name: Cupons
  - name: Taxes
  - name: Common
    description: '01-02-2019 15:23: OK TESTED'
  - name: Transaction
  - name: Dashboard
  - name: Invoice
  - name: sales
  - name: Invoice Copy
  - name: Modules
  - name: System
  - name: Configuration
  - name: IPN
  - name: Functions
x-tagGroups:
  - name: recurring payments
    description: Test
    tags:
      - Plans
      - Prices
      - Coupons
      - subscribers
      - subscription
      - sales
      - Transactions
  - name: Checkout
    tags:
      - Checkout
      - Plans - Checkout page
      - Clients - Checkout Page
  
      
